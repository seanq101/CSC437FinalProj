{"ast":null,"code":"import * as api from '../api';\nexport function clearErrors() {\n  return (dispatch, prevState) => {\n    dispatch({\n      type: \"CLEAR_ERRS\"\n    });\n  };\n}\nexport function signIn(credentials, cb) {\n  return (dispatch, prevState) => {\n    api.signIn(credentials).then(userInfo => dispatch({\n      type: \"SIGN_IN\",\n      user: userInfo\n    })).then(() => {\n      if (cb) cb();\n    }).catch(err => {\n      console.log('err is', err);\n      dispatch({\n        type: 'LOGIN_ERR',\n        details: err\n      });\n    });\n  };\n}\nexport function signOut(cb) {\n  return (dispatch, prevState) => {\n    api.signOut().then(() => dispatch({\n      type: 'SIGN_OUT'\n    })).then(() => {\n      if (cb) cb();\n    });\n  };\n}\nexport function register(data, cb) {\n  return (dispatch, prevState) => {\n    api.register(data).then(() => {\n      if (cb) cb();\n    }).catch(error => dispatch({\n      type: 'REGISTER_ERR',\n      details: error\n    }));\n  };\n}\nexport function updateCnvs(userId, cb) {\n  return (dispatch, prevState) => {\n    api.getCnvs(userId).then(cnvs => dispatch({\n      type: 'UPDATE_CNVS',\n      cnvs\n    })).then(() => {\n      if (cb) cb();\n    });\n  };\n}\nexport function addCnv(newCnv, cb) {\n  return (dispatch, prevState) => {\n    api.postCnv(newCnv).then(cnvRsp => dispatch({\n      type: 'ADD_CNV',\n      cnv: cnvRsp\n    })).then(() => {\n      if (cb) cb();\n    });\n  };\n}\nexport function modCnv(cnvId, title, cb) {\n  return (dispatch, prevState) => {\n    api.putCnv(cnvId, {\n      title\n    }).then(() => {\n      if (cb) cb();\n    });\n  };\n}\nexport function delCnv(id, cb) {\n  return (dispatch, prevState) => {\n    api.delCnv(id).then(() => dispatch({\n      type: 'DEL_CNV'\n    })).then(() => {\n      if (cb) cb();\n    });\n  };\n}\nexport function updateMsgs(cnvId, cb) {\n  return (dispatch, prevState) => {\n    api.getMsgs(cnvId).then(res => dispatch({\n      type: 'GET_MSGS',\n      msgs: res\n    })).then(() => {\n      if (cb) cb();\n    }).catch(err => dispatch({\n      type: 'LOAD_MSGS_ERR',\n      details: err\n    }));\n  };\n}\nexport function addMsg(newMsg, cnvId, cb) {\n  return (dispatch, prevState) => {\n    api.postMsg(newMsg, cnvId).then(res => dispatch({\n      type: 'ADD_MSG',\n      msg: res\n    })).then(() => {\n      if (cb) cb();\n    }).catch(err => dispatch({\n      type: 'ADD_MSG_ERR',\n      details: err\n    }));\n  };\n}\nexport function getPerson(prsId, cb) {\n  return (dispatch, prevState) => {\n    api.getPerson(prsId).then(res => {\n      if (cb) cb(res[0]);\n    });\n  };\n}","map":{"version":3,"sources":["/Users/SeanQuinn/Desktop/ReactJS3/src/actions/actionCreators.js"],"names":["api","clearErrors","dispatch","prevState","type","signIn","credentials","cb","then","userInfo","user","catch","err","console","log","details","signOut","register","data","error","updateCnvs","userId","getCnvs","cnvs","addCnv","newCnv","postCnv","cnvRsp","cnv","modCnv","cnvId","title","putCnv","delCnv","id","updateMsgs","getMsgs","res","msgs","addMsg","newMsg","postMsg","msg","getPerson","prsId"],"mappings":"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","sourcesContent":["import * as api from '../api';\n\nexport function clearErrors() {\n   return (dispatch, prevState) => {\n      dispatch({type: \"CLEAR_ERRS\"});\n   }\n}\n\nexport function signIn(credentials, cb) {\n   return (dispatch, prevState) => {\n      api.signIn(credentials)\n      .then((userInfo) => dispatch({type: \"SIGN_IN\", user: userInfo}))\n      .then(() => {if (cb) cb();})\n      .catch(err => {console.log('err is',err);dispatch({type: 'LOGIN_ERR', details: err})});\n   };\n}\n\nexport function signOut(cb) {\n   return (dispatch, prevState) => {\n      api.signOut()\n      .then(() => dispatch({ type: 'SIGN_OUT' }))\n      .then(() => {if (cb) cb();});\n   };\n}\n\nexport function register(data, cb) {\n   return (dispatch, prevState) => {\n      api.register(data)\n      .then(() => {if (cb) cb();})\n      .catch(error => dispatch({type: 'REGISTER_ERR', details: error}));\n   };\n}\n\nexport function updateCnvs(userId, cb) {\n   return (dispatch, prevState) => {\n      api.getCnvs(userId)\n      .then((cnvs) => dispatch({ type: 'UPDATE_CNVS', cnvs }))\n      .then(() => {if (cb) cb();});\n   };\n}\n\nexport function addCnv(newCnv, cb) {\n   return (dispatch, prevState) => {\n      api.postCnv(newCnv)\n      .then(cnvRsp => dispatch({type: 'ADD_CNV', cnv: cnvRsp}))\n      .then(() => {if (cb) cb();});\n   };\n}\n\nexport function modCnv(cnvId, title, cb) {\n   return (dispatch, prevState) => {\n      api.putCnv(cnvId, {title})\n      .then(() => {if (cb) cb();});\n   };\n}\n\nexport function delCnv(id, cb) {\n   return (dispatch, prevState) => {\n      api.delCnv(id)\n      .then(() => dispatch({ type: 'DEL_CNV' }))\n      .then(() => {if (cb) cb();});\n   };\n}\n\nexport function updateMsgs(cnvId, cb) {\n   return (dispatch, prevState) => {\n      api.getMsgs(cnvId)\n      .then(res => dispatch({type: 'GET_MSGS', msgs: res}))\n      .then(() => {if (cb) cb();})\n      .catch(err => dispatch({type: 'LOAD_MSGS_ERR', details: err}));\n   };\n}\n\nexport function addMsg(newMsg, cnvId, cb) {\n   return (dispatch, prevState) => {\n      api.postMsg(newMsg, cnvId)\n      .then(res => dispatch({type: 'ADD_MSG', msg: res}))\n      .then(() => {if (cb) cb();})\n      .catch(err => dispatch({type: 'ADD_MSG_ERR', details: err}));\n   };\n}\n\nexport function getPerson(prsId, cb) {\n   return (dispatch, prevState) => {\n      api.getPerson(prsId)\n      .then(res => {if (cb) cb(res[0]);});\n   }; \n}"]},"metadata":{},"sourceType":"module"}