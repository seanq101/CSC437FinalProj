{"ast":null,"code":"var _jsxFileName = \"/Users/SeanQuinn/Desktop/ReactJS3/src/components/Cnvs/CnvDetail.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ListGroup, ListGroupItem, Col, Row, Button, Form, FormControl, FormGroup } from 'react-bootstrap';\nimport CnvModal from './CnvModal';\nimport { ConfDialog } from '../components'; //import {delCnv} from '../../api';\n\nimport './CnvOverview.css';\nexport default class CnvDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getValidationState = () => {\n      if (this.state.newMessage) {\n        return null;\n      }\n\n      return \"warning\";\n    };\n\n    this.formSubmit = event => {\n      this.props.addMsg({\n        content: this.state.newMessage\n      }, this.state.cnvId);\n      console.log(this.state.newMessage);\n      debugger;\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        newMessage: e.target.value\n      });\n    };\n\n    let cnvId = this.props.location.pathname.split('/')[2]; //this.setState({people: this.state.people.push(this.props.getPerson(msg.prsId))}\n\n    this.props.updateMsgs(cnvId, () => this.props.Msgs.forEach(msg => {\n      this.props.getPerson(msg.prsId, res => {\n        var temp = this.state.people;\n        console.log('res ', res);\n        temp.push(res);\n        console.log('temp', temp);\n        this.setState({\n          people: temp\n        });\n      }); // console.log(this.state.people.push(this.props.getPerson(msg.prsId)))\n    }));\n    this.state = {\n      showModal: false,\n      showConfirmation: false,\n      newMessage: '',\n      cnvId: cnvId,\n      people: []\n    };\n  }\n\n  render() {\n    console.log(\"Rerendering Cnv Detail \", this.state.messages);\n    var messages = this.props.Msgs;\n    console.log(messages);\n    console.log(this.state.people);\n    var msgItems = [];\n    messages.forEach((msg, idx) => {\n      msgItems.push(React.createElement(MsgItem, {\n        key: msg.id,\n        content: msg.content,\n        id: msg.id,\n        email: this.state.people[idx].email //showControls={cnv.ownerId === this.props.Prss.id}\n        ,\n        onDelete: () => this.openConfirmation(msg),\n        onEdit: () => this.openModal(msg),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"section\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Conversation Detail\"), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, msgItems), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"formBasicText\",\n      validationstate: this.getValidationState(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"New Message: \"), React.createElement(FormControl, {\n      type: \"text\",\n      value: this.state.newMessage,\n      placeholder: \"Enter text\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(FormControl.Feedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), !this.state.newMessage && React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"A new message is required\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      onClick: this.formSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Create New Message\")))));\n  }\n\n} //Create a MsgItem Component to show each message. This component shows on a top line the posting date and email of the poster, \n//and beneath that line the text content of the message, whose appearance is toggled on and off by clicking on the top line.\n\nconst MsgItem = function (props) {\n  return React.createElement(ListGroupItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, new Intl.DateTimeFormat('us', {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\"\n  }).format(new Date(props.whenMade))), React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, \"props.title\"), React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \"props.email\")));\n}; // A Cnv list item\n\n\nconst CnvItem = function (props) {\n  return React.createElement(ListGroupItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/CnvDetail/\" + props.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, props.title)), props.lastMessage ? React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, new Intl.DateTimeFormat('us', {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\"\n  }).format(new Date(props.lastMessage))) : React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \" Null \"), props.showControls ? React.createElement(\"div\", {\n    className: \"float-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"sm\",\n    onClick: props.onDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"fa fa-thumbs-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  })), React.createElement(Button, {\n    size: \"sm\",\n    onClick: props.onEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"fa fa-edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }))) : ''));\n};","map":{"version":3,"sources":["/Users/SeanQuinn/Desktop/ReactJS3/src/components/Cnvs/CnvDetail.jsx"],"names":["React","Component","Link","ListGroup","ListGroupItem","Col","Row","Button","Form","FormControl","FormGroup","CnvModal","ConfDialog","CnvDetail","constructor","props","getValidationState","state","newMessage","formSubmit","event","addMsg","content","cnvId","console","log","handleChange","e","setState","target","value","location","pathname","split","updateMsgs","Msgs","forEach","msg","getPerson","prsId","res","temp","people","push","showModal","showConfirmation","render","messages","msgItems","idx","id","email","openConfirmation","openModal","MsgItem","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Date","whenMade","CnvItem","title","lastMessage","showControls","onDelete","onEdit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {ListGroup, ListGroupItem, Col, Row, Button, Form, FormControl, FormGroup} from 'react-bootstrap';\nimport CnvModal from './CnvModal';\nimport {ConfDialog} from '../components';\n//import {delCnv} from '../../api';\nimport './CnvOverview.css';\n\nexport default class CnvDetail extends Component {\n   constructor(props) {\n      super(props);\n      let cnvId = this.props.location.pathname.split('/')[2];\n      //this.setState({people: this.state.people.push(this.props.getPerson(msg.prsId))}\n      this.props.updateMsgs(cnvId, \n         () => this.props.Msgs.forEach(msg => {\n            this.props.getPerson(msg.prsId, (res) => {\n               var temp = this.state.people;\n               console.log('res ',res);\n               temp.push(res);\n               console.log('temp',temp)\n               this.setState({people: temp})\n            })\n         \n            \n           // console.log(this.state.people.push(this.props.getPerson(msg.prsId)))\n         }))\n      this.state = {\n         showModal: false,\n         showConfirmation: false,\n         newMessage: '',\n         cnvId: cnvId,\n         people: []\n      }\n   }\n\n   getValidationState = () => {\n      if (this.state.newMessage) {\n         return null;\n      }\n      return \"warning\";\n   }\n\n   formSubmit = (event) => {\n      this.props.addMsg({ content: this.state.newMessage }, this.state.cnvId);\n      console.log(this.state.newMessage);\n      debugger;\n   }\n\n   handleChange = (e) => {\n      this.setState({newMessage: e.target.value});\n   }\n\n   render() {\n      console.log(\"Rerendering Cnv Detail \", this.state.messages);\n\n      \n      var messages = this.props.Msgs;\n      console.log(messages)\n      console.log(this.state.people)\n      var msgItems = [];\n      messages.forEach((msg, idx) => {\n         msgItems.push(<MsgItem\n               key={msg.id}\n               content={msg.content}\n               id={msg.id}\n               email={this.state.people[idx].email}\n               //showControls={cnv.ownerId === this.props.Prss.id}\n               onDelete={() => this.openConfirmation(msg)}\n               onEdit={() => this.openModal(msg)} />);\n      });\n\n      return (\n         <section className=\"container\">\n            <h1>Conversation Detail</h1>\n            <ListGroup>\n               {msgItems}\n            </ListGroup>\n\n            <Form>\n\n               <FormGroup controlId=\"formBasicText\"\n                  validationstate={this.getValidationState()}\n               >\n                  <Form.Label>New Message: </Form.Label>\n                  <FormControl\n                     type=\"text\"\n                     value={this.state.newMessage}\n                     placeholder=\"Enter text\"\n                     onChange={this.handleChange}\n                  />\n                  <FormControl.Feedback />\n                  {\n                     !(this.state.newMessage) && \n                     <Form.Text className=\"text-muted\">\n                        A new message is required\n                     </Form.Text>\n                  }\n                  \n               </FormGroup>\n\n               <FormGroup>\n                  <Col>\n                     <Button type=\"submit\" onClick={this.formSubmit}>\n                        Create New Message\n                     </Button>\n                 </Col>\n               </FormGroup>\n\n            </Form>\n\n         \n            \n         </section>\n      )\n   }\n}\n\n//Create a MsgItem Component to show each message. This component shows on a top line the posting date and email of the poster, \n//and beneath that line the text content of the message, whose appearance is toggled on and off by clicking on the top line.\n\nconst MsgItem = function (props) {\n   return (\n      <ListGroupItem>\n         <Row>\n            \n            <Col sm={4}>{new Intl.DateTimeFormat('us',\n               {\n                  year: \"numeric\", month: \"short\", day: \"numeric\",\n                  hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\"\n               })\n               .format(new Date(props.whenMade))}\n            </Col>\n            <Col sm={4}>\n               props.title\n            </Col>\n            <Col sm={4}>\n               props.email\n            </Col>\n            \n         </Row>\n      </ListGroupItem>\n   )\n}\n\n// A Cnv list item\nconst CnvItem = function (props) {\n   return (\n      <ListGroupItem>\n         <Row> \n            <Col sm={4}>\n               <Link to={\"/CnvDetail/\" + props.id}>{props.title}</Link>\n            </Col>\n            {\n               props.lastMessage ? \n\n               <Col sm={4}>{new Intl.DateTimeFormat('us',\n               {\n                  year: \"numeric\", month: \"short\", day: \"numeric\",\n                  hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\"\n               })\n               .format(new Date(props.lastMessage))}\n               </Col> \n               : \n               <Col sm={4}> Null </Col>\n            }\n            \n            {props.showControls ?\n               <div className=\"float-right\">\n                  <Button size=\"sm\" onClick={props.onDelete}>\n                     <span className=\"fa fa-thumbs-up\"/>\n                  </Button>\n                  <Button size=\"sm\" onClick={props.onEdit}>\n                     <span className=\"fa fa-edit\"/>\n                  </Button>\n               </div>\n               : ''}\n         </Row>\n      </ListGroupItem>\n   )\n}\n"]},"metadata":{},"sourceType":"module"}