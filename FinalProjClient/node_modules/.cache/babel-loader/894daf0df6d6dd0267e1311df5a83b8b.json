{"ast":null,"code":"export default function Cnvs(state = [], action) {\n  switch (action.type) {\n    case 'UPDATE_CNVS':\n      // Replace previous cnvs\n      return action.cnvs;\n\n    case 'UPDATE_CNV':\n      /* Example of wrongness\n      state.forEach(val => {\n         if (val.id === action.data.cnvId)\n            val.title = action.data.title;\n      });\n      return state;*/\n      return state.map(val => val.id !== action.data.cnvId ? val : Object.assign({}, val, {\n        title: action.data.title\n      }));\n\n    case 'ADD_CNV':\n      return state.concat([action.cnv]);\n\n    case 'DEL_CNV':\n      console.log(state.filter(curCnv => curCnv.id !== action.cnv));\n      return state.filter(curCnv => curCnv.id !== action.cnv);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/SeanQuinn/Desktop/ReactJS3/src/reducers/Cnvs.js"],"names":["Cnvs","state","action","type","cnvs","map","val","id","data","cnvId","Object","assign","title","concat","cnv","console","log","filter","curCnv"],"mappings":"AAAA,eAAe,SAASA,IAAT,CAAcC,KAAK,GAAG,EAAtB,EAA0BC,MAA1B,EAAkC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK,aAAL;AAAoB;AACjB,aAAOD,MAAM,CAACE,IAAd;;AACH,SAAK,YAAL;AACG;;;;;;AAMA,aAAOH,KAAK,CAACI,GAAN,CAAUC,GAAG,IAAIA,GAAG,CAACC,EAAJ,KAAWL,MAAM,CAACM,IAAP,CAAYC,KAAvB,GACrBH,GADqB,GACfI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,GAAlB,EAAuB;AAAEM,QAAAA,KAAK,EAAEV,MAAM,CAACM,IAAP,CAAYI;AAArB,OAAvB,CADF,CAAP;;AAEH,SAAK,SAAL;AACG,aAAOX,KAAK,CAACY,MAAN,CAAa,CAACX,MAAM,CAACY,GAAR,CAAb,CAAP;;AACH,SAAK,SAAL;AACGC,MAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACgB,MAAN,CAAaC,MAAM,IAAIA,MAAM,CAACX,EAAP,KAAcL,MAAM,CAACY,GAA5C,CAAZ;AACA,aAAOb,KAAK,CAACgB,MAAN,CAAaC,MAAM,IAAIA,MAAM,CAACX,EAAP,KAAcL,MAAM,CAACY,GAA5C,CAAP;;AACH;AACG,aAAOb,KAAP;AAlBN;AAoBF","sourcesContent":["export default function Cnvs(state = [], action) {\n   switch (action.type) {\n      case 'UPDATE_CNVS': // Replace previous cnvs\n         return action.cnvs;\n      case 'UPDATE_CNV':\n         /* Example of wrongness\n         state.forEach(val => {\n            if (val.id === action.data.cnvId)\n               val.title = action.data.title;\n         });\n         return state;*/\n         return state.map(val => val.id !== action.data.cnvId ?\n            val : Object.assign({}, val, { title: action.data.title }));\n      case 'ADD_CNV':\n         return state.concat([action.cnv]);\n      case 'DEL_CNV':\n         console.log(state.filter(curCnv => curCnv.id !== action.cnv))\n         return state.filter(curCnv => curCnv.id !== action.cnv)\n      default:\n         return state;\n   }\n}\n"]},"metadata":{},"sourceType":"module"}