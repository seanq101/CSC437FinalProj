{"ast":null,"code":"var _jsxFileName = \"/Users/SeanQuinn/Desktop/ReactJS3/src/components/Cnvs/CnvDetail.jsx\";\nimport React, { Component } from 'react';\nimport { ListGroup, ListGroupItem, Col, Row, Button, Form, FormControl, FormGroup } from 'react-bootstrap';\nimport { MsgItem, ConfDialog } from '../components';\nimport './CnvOverview.css';\nexport default class CnvDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getValidationState = () => {\n      if (this.state.newMessage) {\n        return null;\n      }\n\n      return \"warning\";\n    };\n\n    this.formSubmit = event => {\n      this.props.addMsg({\n        content: this.state.newMessage\n      }, this.state.cnvId, () => {\n        this.setState({\n          people: {},\n          newMessage: ''\n        });\n        this.props.updateMsgs(this.state.cnvId, () => this.props.Msgs.forEach(msg => {\n          var temp = this.state.people;\n\n          if (temp[res.prsId] === undefined) {\n            temp[res.prsId] = msg.email;\n          }\n\n          this.props.getPerson(msg.prsId, res => {\n            var temp = this.state.people;\n\n            if (temp[res.id] === undefined) {\n              temp[res.id] = res;\n            } //temp.push(res);\n\n\n            this.setState({\n              people: temp\n            });\n          }); // console.log(this.state.people.push(this.props.getPerson(msg.prsId)))\n        }));\n      });\n      console.log(this.state.newMessage);\n    };\n\n    this.formValid = () => {\n      return this.state.newMessage.length;\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        newMessage: e.target.value\n      });\n    };\n\n    this.closeErrorConf = btn => {\n      this.props.clearErrors();\n    };\n\n    let cnvId = this.props.location.pathname.split('/')[2]; //this.setState({people: this.state.people.push(this.props.getPerson(msg.prsId))}\n\n    this.props.updateMsgs(cnvId);\n    this.state = {\n      newMessage: '',\n      cnvId: cnvId\n    };\n  }\n\n  hideContent(e) {\n    console.log(e);\n    console.log(this);\n  }\n\n  render() {\n    console.log(\"Rerendering Cnv Detail \", this.state.messages);\n    var messages = this.props.Msgs;\n    var msgItems = [];\n    var uniquePeople = {};\n    console.log('messages', messages);\n    messages.forEach(msg => {\n      if (uniquePeople[msg.prsId] === undefined) {\n        uniquePeople[msg.prsId] = 1;\n      }\n    });\n\n    if (Object.keys(uniquePeople).length === Object.keys(this.state.people).length) {\n      messages.forEach((msg, idx) => {\n        msgItems.push(React.createElement(MsgItem, {\n          key: msg.id,\n          content: msg.content,\n          id: msg.id,\n          email: msg.email,\n          whenMade: msg.whenMade,\n          hideContent: () => this.hideContent(this),\n          ishidden: 0 //showControls={cnv.ownerId === this.props.Prss.id}\n          ,\n          onDelete: () => this.openConfirmation(msg),\n          onEdit: () => this.openModal(msg),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }));\n      });\n    }\n\n    return React.createElement(\"section\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Conversation Detail\"), React.createElement(Row, {\n      hidden: this.props.Msgs.length === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Date\")), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, msgItems), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"formBasicText\",\n      validationstate: this.getValidationState(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"New Message: \"), React.createElement(FormControl, {\n      type: \"text\",\n      value: this.state.newMessage,\n      placeholder: \"Enter text\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(FormControl.Feedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), !this.state.newMessage && React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"A new message is required\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.formSubmit,\n      disabled: !this.formValid(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Create New Message\")))), React.createElement(ConfDialog, {\n      show: this.props.Errs.length !== 0,\n      title: \"Error Notice\",\n      body: this.props.Errs[0],\n      buttons: ['For Sure'],\n      onClose: this.closeErrorConf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }));\n  }\n\n} //Create a MsgItem Component to show each message. This component shows on a top line the posting date and email of the poster, \n//and beneath that line the text content of the message, whose appearance is toggled on and off by clicking on the top line.","map":{"version":3,"sources":["/Users/SeanQuinn/Desktop/ReactJS3/src/components/Cnvs/CnvDetail.jsx"],"names":["React","Component","ListGroup","ListGroupItem","Col","Row","Button","Form","FormControl","FormGroup","MsgItem","ConfDialog","CnvDetail","constructor","props","getValidationState","state","newMessage","formSubmit","event","addMsg","content","cnvId","setState","people","updateMsgs","Msgs","forEach","msg","temp","res","prsId","undefined","email","getPerson","id","console","log","formValid","length","handleChange","e","target","value","closeErrorConf","btn","clearErrors","location","pathname","split","hideContent","render","messages","msgItems","uniquePeople","Object","keys","idx","push","whenMade","openConfirmation","openModal","Errs"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,EAAmBC,aAAnB,EAAkCC,GAAlC,EAAuCC,GAAvC,EAA4CC,MAA5C,EAAoDC,IAApD,EAA0DC,WAA1D,EAAuEC,SAAvE,QAAuF,iBAAvF;AACA,SAAQC,OAAR,EAAiBC,UAAjB,QAAkC,eAAlC;AAEA,OAAO,mBAAP;AAEA,eAAe,MAAMC,SAAN,SAAwBX,SAAxB,CAAkC;AAC9CY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;;AADgB,SAWnBC,kBAXmB,GAWE,MAAM;AACxB,UAAI,KAAKC,KAAL,CAAWC,UAAf,EAA2B;AACxB,eAAO,IAAP;AACF;;AACD,aAAO,SAAP;AACF,KAhBkB;;AAAA,SAkBnBC,UAlBmB,GAkBLC,KAAD,IAAW;AACrB,WAAKL,KAAL,CAAWM,MAAX,CAAkB;AAAEC,QAAAA,OAAO,EAAE,KAAKL,KAAL,CAAWC;AAAtB,OAAlB,EAAsD,KAAKD,KAAL,CAAWM,KAAjE,EACG,MAAM;AACH,aAAKC,QAAL,CAAc;AAACC,UAAAA,MAAM,EAAE,EAAT;AAAaP,UAAAA,UAAU,EAAE;AAAzB,SAAd;AACA,aAAKH,KAAL,CAAWW,UAAX,CAAsB,KAAKT,KAAL,CAAWM,KAAjC,EACG,MAAM,KAAKR,KAAL,CAAWY,IAAX,CAAgBC,OAAhB,CAAwBC,GAAG,IAAI;AAClC,cAAIC,IAAI,GAAG,KAAKb,KAAL,CAAWQ,MAAtB;;AACA,cAAGK,IAAI,CAACC,GAAG,CAACC,KAAL,CAAJ,KAAoBC,SAAvB,EAAkC;AAC/BH,YAAAA,IAAI,CAACC,GAAG,CAACC,KAAL,CAAJ,GAAkBH,GAAG,CAACK,KAAtB;AACF;;AAED,eAAKnB,KAAL,CAAWoB,SAAX,CAAqBN,GAAG,CAACG,KAAzB,EAAiCD,GAAD,IAAS;AACtC,gBAAID,IAAI,GAAG,KAAKb,KAAL,CAAWQ,MAAtB;;AACA,gBAAGK,IAAI,CAACC,GAAG,CAACK,EAAL,CAAJ,KAAiBH,SAApB,EAA8B;AAC3BH,cAAAA,IAAI,CAACC,GAAG,CAACK,EAAL,CAAJ,GAAeL,GAAf;AACF,aAJqC,CAKtC;;;AACA,iBAAKP,QAAL,CAAc;AAACC,cAAAA,MAAM,EAAEK;AAAT,aAAd;AACF,WAPD,EANkC,CAgBnC;AACD,SAjBK,CADT;AAmBF,OAtBJ;AAuBAO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWC,UAAvB;AACF,KA3CkB;;AAAA,SA6CnBqB,SA7CmB,GA6CP,MAAM;AACf,aAAO,KAAKtB,KAAL,CAAWC,UAAX,CAAsBsB,MAA7B;AACF,KA/CkB;;AAAA,SAiDnBC,YAjDmB,GAiDHC,CAAD,IAAO;AACnB,WAAKlB,QAAL,CAAc;AAACN,QAAAA,UAAU,EAAEwB,CAAC,CAACC,MAAF,CAASC;AAAtB,OAAd;AACF,KAnDkB;;AAAA,SA0DnBC,cA1DmB,GA0DDC,GAAD,IAAS;AACvB,WAAK/B,KAAL,CAAWgC,WAAX;AACF,KA5DkB;;AAEhB,QAAIxB,KAAK,GAAG,KAAKR,KAAL,CAAWiC,QAAX,CAAoBC,QAApB,CAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAAZ,CAFgB,CAGhB;;AACA,SAAKnC,KAAL,CAAWW,UAAX,CAAsBH,KAAtB;AACA,SAAKN,KAAL,GAAa;AACVC,MAAAA,UAAU,EAAE,EADF;AAEVK,MAAAA,KAAK,EAAEA;AAFG,KAAb;AAIF;;AA4CD4B,EAAAA,WAAW,CAAET,CAAF,EAAK;AACbL,IAAAA,OAAO,CAACC,GAAR,CAAYI,CAAZ;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACF;;AAMDc,EAAAA,MAAM,GAAG;AACNf,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC,KAAKrB,KAAL,CAAWoC,QAAlD;AAGA,QAAIA,QAAQ,GAAG,KAAKtC,KAAL,CAAWY,IAA1B;AACA,QAAI2B,QAAQ,GAAG,EAAf;AACA,QAAIC,YAAY,GAAG,EAAnB;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBe,QAAxB;AACAA,IAAAA,QAAQ,CAACzB,OAAT,CAAiBC,GAAG,IAAI;AACrB,UAAG0B,YAAY,CAAC1B,GAAG,CAACG,KAAL,CAAZ,KAA4BC,SAA/B,EAAyC;AACtCsB,QAAAA,YAAY,CAAC1B,GAAG,CAACG,KAAL,CAAZ,GAA0B,CAA1B;AACF;AACH,KAJD;;AAKA,QAAGwB,MAAM,CAACC,IAAP,CAAYF,YAAZ,EAA0Bf,MAA1B,KACFgB,MAAM,CAACC,IAAP,CAAY,KAAKxC,KAAL,CAAWQ,MAAvB,EAA+Be,MADhC,EACuC;AACpCa,MAAAA,QAAQ,CAACzB,OAAT,CAAiB,CAACC,GAAD,EAAM6B,GAAN,KAAc;AAC5BJ,QAAAA,QAAQ,CAACK,IAAT,CAAc,oBAAC,OAAD;AACR,UAAA,GAAG,EAAE9B,GAAG,CAACO,EADD;AAER,UAAA,OAAO,EAAEP,GAAG,CAACP,OAFL;AAGR,UAAA,EAAE,EAAEO,GAAG,CAACO,EAHA;AAIR,UAAA,KAAK,EAAEP,GAAG,CAACK,KAJH;AAKR,UAAA,QAAQ,EAAEL,GAAG,CAAC+B,QALN;AAMR,UAAA,WAAW,EAAE,MAAM,KAAKT,WAAL,CAAiB,IAAjB,CANX;AAOR,UAAA,QAAQ,EAAE,CAPF,CAQR;AARQ;AASR,UAAA,QAAQ,EAAE,MAAM,KAAKU,gBAAL,CAAsBhC,GAAtB,CATR;AAUR,UAAA,MAAM,EAAE,MAAM,KAAKiC,SAAL,CAAejC,GAAf,CAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAd;AAWF,OAZD;AAaF;;AAGD,WACG;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADH,EAEG,oBAAC,GAAD;AAAK,MAAA,MAAM,EAAE,KAAKd,KAAL,CAAWY,IAAX,CAAgBa,MAAhB,KAA2B,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFH,EAKG,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALH,CAFH,EAaG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIc,QADJ,CAbH,EAiBG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,eAArB;AACG,MAAA,eAAe,EAAE,KAAKtC,kBAAL,EADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHH,EAIG,oBAAC,WAAD;AACG,MAAA,IAAI,EAAC,MADR;AAEG,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,UAFrB;AAGG,MAAA,WAAW,EAAC,YAHf;AAIG,MAAA,QAAQ,EAAE,KAAKuB,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,EAUG,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVH,EAYM,CAAE,KAAKxB,KAAL,CAAWC,UAAb,IACA,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAbN,CAFH,EAsBG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,UAAtB;AAAkC,MAAA,QAAQ,EAAE,CAAC,KAAKoB,SAAL,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADH,CADH,CAtBH,CAjBH,EAiDG,oBAAC,UAAD;AACG,MAAA,IAAI,EAAE,KAAKxB,KAAL,CAAWgD,IAAX,CAAgBvB,MAAhB,KAA2B,CADpC;AAEG,MAAA,KAAK,EAAC,cAFT;AAGG,MAAA,IAAI,EAAE,KAAKzB,KAAL,CAAWgD,IAAX,CAAgB,CAAhB,CAHT;AAIG,MAAA,OAAO,EAAE,CAAC,UAAD,CAJZ;AAKG,MAAA,OAAO,EAAE,KAAKlB,cALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjDH,CADH;AA4DF;;AA1J6C,C,CA6JjD;AACA","sourcesContent":["import React, {Component} from 'react';\nimport {ListGroup, ListGroupItem, Col, Row, Button, Form, FormControl, FormGroup} from 'react-bootstrap';\nimport {MsgItem, ConfDialog} from '../components';\n\nimport './CnvOverview.css';\n\nexport default class CnvDetail extends Component {\n   constructor(props) {\n      super(props);\n      let cnvId = this.props.location.pathname.split('/')[2];\n      //this.setState({people: this.state.people.push(this.props.getPerson(msg.prsId))}\n      this.props.updateMsgs(cnvId)\n      this.state = {\n         newMessage: '',\n         cnvId: cnvId,\n      }\n   }\n\n   getValidationState = () => {\n      if (this.state.newMessage) {\n         return null;\n      }\n      return \"warning\";\n   }\n\n   formSubmit = (event) => {\n      this.props.addMsg({ content: this.state.newMessage }, this.state.cnvId,\n         () => {\n            this.setState({people: {}, newMessage: ''})\n            this.props.updateMsgs(this.state.cnvId, \n               () => this.props.Msgs.forEach(msg => {\n                  var temp = this.state.people;\n                  if(temp[res.prsId] === undefined) {\n                     temp[res.prsId] = msg.email;\n                  }\n\n                  this.props.getPerson(msg.prsId, (res) => {\n                     var temp = this.state.people;\n                     if(temp[res.id] === undefined){\n                        temp[res.id] = res\n                     }\n                     //temp.push(res);\n                     this.setState({people: temp})\n                  })\n               \n                  \n                 // console.log(this.state.people.push(this.props.getPerson(msg.prsId)))\n               }))\n         });\n      console.log(this.state.newMessage);\n   }\n\n   formValid = () => {\n      return this.state.newMessage.length\n   }\n\n   handleChange = (e) => {\n      this.setState({newMessage: e.target.value});\n   }\n\n   hideContent (e) {\n      console.log(e)\n      console.log(this)\n   }\n\n   closeErrorConf = (btn) => {\n      this.props.clearErrors();\n   }\n\n   render() {\n      console.log(\"Rerendering Cnv Detail \", this.state.messages);\n\n      \n      var messages = this.props.Msgs;\n      var msgItems = [];\n      var uniquePeople = {};\n      console.log('messages', messages)\n      messages.forEach(msg => {\n         if(uniquePeople[msg.prsId] === undefined){\n            uniquePeople[msg.prsId] = 1;\n         }\n      })\n      if(Object.keys(uniquePeople).length === \n       Object.keys(this.state.people).length){\n         messages.forEach((msg, idx) => {\n            msgItems.push(<MsgItem\n                  key={msg.id}\n                  content={msg.content}\n                  id={msg.id}\n                  email={msg.email}\n                  whenMade={msg.whenMade}\n                  hideContent={() => this.hideContent(this)}\n                  ishidden={0}\n                  //showControls={cnv.ownerId === this.props.Prss.id}\n                  onDelete={() => this.openConfirmation(msg)}\n                  onEdit={() => this.openModal(msg)} />);\n         });\n      }\n      \n\n      return (\n         <section className=\"container\">\n            <h1>Conversation Detail</h1>\n            <Row hidden={this.props.Msgs.length === 0}>\n               \n               <Col sm={4}>\n                  Email\n               </Col>\n               <Col sm={4}>\n                  Date\n               </Col>\n            </Row>\n            \n          \n            <ListGroup>\n               {msgItems}\n            </ListGroup>\n\n            <Form>\n\n               <FormGroup controlId=\"formBasicText\"\n                  validationstate={this.getValidationState()}\n               >\n                  <Form.Label>New Message: </Form.Label>\n                  <FormControl\n                     type=\"text\"\n                     value={this.state.newMessage}\n                     placeholder=\"Enter text\"\n                     onChange={this.handleChange}\n                  />\n                  <FormControl.Feedback />\n                  {\n                     !(this.state.newMessage) && \n                     <Form.Text className=\"text-muted\">\n                        A new message is required\n                     </Form.Text>\n                  }\n                  \n               </FormGroup>\n\n               <FormGroup>\n                  <Col>\n                     <Button onClick={this.formSubmit} disabled={!this.formValid()}>\n                        Create New Message\n                     </Button>\n                 </Col>\n               </FormGroup>\n\n            </Form>\n\n            <ConfDialog\n               show={this.props.Errs.length !== 0}\n               title=\"Error Notice\"\n               body={this.props.Errs[0]}\n               buttons={['For Sure']}\n               onClose={this.closeErrorConf}\n                />\n            \n         </section>\n      )\n   }\n}\n\n//Create a MsgItem Component to show each message. This component shows on a top line the posting date and email of the poster, \n//and beneath that line the text content of the message, whose appearance is toggled on and off by clicking on the top line.\n"]},"metadata":{},"sourceType":"module"}