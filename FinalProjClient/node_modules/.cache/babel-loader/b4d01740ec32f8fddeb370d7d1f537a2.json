{"ast":null,"code":"var _jsxFileName = \"/Users/SeanQuinn/Desktop/CSC437FinalProj/FinalProjClient/src/components/Boards/BoardRoom.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ListGroup, ListGroupItem, Col, Row, Button } from 'react-bootstrap';\nimport { ConfDialog } from '../components';\nimport \"./BoardRoom.css\";\nexport default class BoardRoom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openModal = cnv => {\n      this.setState({\n        showModal: true,\n        editCnv: cnv\n      });\n    };\n\n    this.modalDismiss = result => {\n      if (result.status === \"Ok\") {\n        if (this.state.editCnv) this.modCnv(result);else this.newCnv(result);\n      }\n\n      this.setState({\n        showModal: false,\n        editCnv: null\n      });\n    };\n\n    this.openConfirmation = cnv => {\n      this.setState({\n        delCnv: cnv,\n        showConfirmation: true\n      });\n    };\n\n    this.closeConfirmation = res => {\n      if (res === \"Yes\") {\n        this.props.delCnv(this.state.delCnv.id); //this.props.updateCnvs();\n\n        this.setState({\n          showConfirmation: false,\n          delCnv: null\n        });\n      } else {\n        console.log(res);\n        this.setState({\n          showConfirmation: false,\n          delCnv: null\n        });\n      }\n    };\n\n    this.openEdit = cnv => {\n      this.setState({\n        delCnv: cnv,\n        showConfirmation: true\n      });\n    };\n\n    this.props.updateCnvs();\n    this.state = {\n      showModal: false,\n      showConfirmation: false\n    };\n  } // Open a model with a |cnv| (optional)\n\n\n  modCnv(result) {\n    this.props.modCnv(this.state.editCnv.id, result.title);\n    this.props.updateCnvs();\n  }\n\n  newCnv(result) {\n    this.props.addCnv({\n      title: result.title\n    });\n  }\n\n  render() {\n    console.log(\"Rerendering Cnv Overview \", this.props);\n    var cnvItems = [];\n    console.log(this.props.Cnvs);\n    this.props.Cnvs.forEach(cnv => {\n      if (!this.props.userOnly || this.props.Prss.id === cnv.ownerId) cnvItems.push(React.createElement(CnvItem, {\n        key: cnv.id,\n        title: cnv.title,\n        lastMessage: cnv.lastMessage,\n        id: cnv.id,\n        showControls: cnv.ownerId === this.props.Prss.id || this.props.Prss.role === 1,\n        onDelete: () => this.openConfirmation(cnv),\n        onEdit: () => this.openModal(cnv),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"section\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"My Boards\"), React.createElement(ListGroup, {\n      className: \"padded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, cnvItems), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.openModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"New Conversation\"), React.createElement(ConfDialog, {\n      show: this.state.showConfirmation,\n      title: \"Delete Conversation\",\n      body: \"Are you sure you want to delete the Conversation\\n           '\".concat(this.state.delCnv ? this.state.delCnv.title : '', \"'\"),\n      buttons: ['Yes', 'Abort'],\n      onClose: this.closeConfirmation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n\n} // A Cnv list item\n\nconst CnvItem = function (props) {\n  return React.createElement(ListGroupItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 4,\n    className: \"float-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/CnvDetail/\" + props.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, props.title)), props.lastMessage ? React.createElement(Col, {\n    sm: 4,\n    className: \"float-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, new Intl.DateTimeFormat('us', {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\"\n  }).format(new Date(props.lastMessage))) : React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \" N/A \"), props.showControls ? React.createElement(Col, {\n    sm: 4,\n    className: \"float-right right-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"sm\",\n    onClick: props.onDelete,\n    className: \"favicon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"fa fa-trash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(Button, {\n    size: \"sm\",\n    onClick: props.onEdit,\n    className: \"favicon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"fa fa-edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }))) : ''));\n};","map":{"version":3,"sources":["/Users/SeanQuinn/Desktop/CSC437FinalProj/FinalProjClient/src/components/Boards/BoardRoom.jsx"],"names":["React","Component","Link","ListGroup","ListGroupItem","Col","Row","Button","ConfDialog","BoardRoom","constructor","props","openModal","cnv","setState","showModal","editCnv","modalDismiss","result","status","state","modCnv","newCnv","openConfirmation","delCnv","showConfirmation","closeConfirmation","res","id","console","log","openEdit","updateCnvs","title","addCnv","render","cnvItems","Cnvs","forEach","userOnly","Prss","ownerId","push","lastMessage","role","CnvItem","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Date","showControls","onDelete","onEdit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {ListGroup, ListGroupItem, Col, Row, Button} from 'react-bootstrap';\nimport {ConfDialog} from '../components';\nimport \"./BoardRoom.css\"\n\nexport default class BoardRoom extends Component {\n   constructor(props) {\n      super(props);\n      this.props.updateCnvs();\n      this.state = {\n         showModal: false,\n         showConfirmation: false,\n      }\n   }\n\n   // Open a model with a |cnv| (optional)\n   openModal = (cnv) => {\n      this.setState({showModal: true, editCnv: cnv});\n   }\n\n   modalDismiss = (result) => {\n      if (result.status === \"Ok\") {\n         if (this.state.editCnv)\n            this.modCnv(result);\n         else\n            this.newCnv(result);\n      }\n      this.setState({ showModal: false, editCnv: null });\n   }\n\n   modCnv(result) {\n      this.props.modCnv(this.state.editCnv.id, result.title);\n      this.props.updateCnvs();\n   }\n\n   newCnv(result) {\n      this.props.addCnv({ title: result.title });\n   }\n\n   openConfirmation = (cnv) => {\n      this.setState({ delCnv: cnv, showConfirmation: true })\n   }\n\n   closeConfirmation = (res) => {\n      if(res === \"Yes\"){\n         this.props.delCnv(this.state.delCnv.id);\n         //this.props.updateCnvs();\n         this.setState({showConfirmation: false, delCnv: null });\n      } else {\n         console.log(res)\n         this.setState({ showConfirmation: false, delCnv: null });\n      }\n      \n   }\n\n   openEdit = (cnv) => {\n      this.setState({ delCnv: cnv, showConfirmation: true })\n   }\n\n   \n\n   render() {\n      console.log(\"Rerendering Cnv Overview \", this.props);\n      var cnvItems = [];\n      console.log(this.props.Cnvs)\n      this.props.Cnvs.forEach(cnv => {\n         if (!this.props.userOnly || this.props.Prss.id === cnv.ownerId)\n            cnvItems.push(<CnvItem\n               key={cnv.id}\n               title={cnv.title}\n               lastMessage={cnv.lastMessage}\n               id={cnv.id}\n               showControls={cnv.ownerId === this.props.Prss.id || \n                this.props.Prss.role === 1}\n               onDelete={() => this.openConfirmation(cnv)}\n               onEdit={() => this.openModal(cnv)} />);\n      });\n\n      return (\n         <section className=\"container\">\n            <h1 className=\"heading\">My Boards</h1>\n\n            <ListGroup className=\"padded\">\n               {cnvItems}\n            </ListGroup>\n            <Button variant=\"primary\" onClick=\n               {() => this.openModal()}>New Conversation</Button>\n            {/* Modal for creating and change cnv */}\n            \n            \n            <ConfDialog\n               show={this.state.showConfirmation}\n               title=\"Delete Conversation\"\n               body={`Are you sure you want to delete the Conversation\n           '${this.state.delCnv ? this.state.delCnv.title : ''}'`}\n               buttons={['Yes', 'Abort']}\n               onClose={this.closeConfirmation} />\n         </section>\n      )\n   }\n}\n\n// A Cnv list item\nconst CnvItem = function (props) {\n   return (\n      <ListGroupItem>\n         <Row> \n            <Col sm={4} className=\"float-left\">\n               <Link to={\"/CnvDetail/\" + props.id}>{props.title}</Link>\n            </Col>\n            {\n               props.lastMessage ? \n                  <Col sm={4} \n                   className=\"float-left\">{new Intl.DateTimeFormat('us',\n                  {\n                     year: \"numeric\", month: \"short\", day: \"numeric\",\n                     hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\"\n                  })\n                  .format(new Date(props.lastMessage))}\n                  </Col> \n                  : \n                  <Col sm={4}> N/A </Col>\n            }\n            \n            \n            {props.showControls ?\n               <Col sm={4} className=\"float-right right-text\">\n                  <Button size=\"sm\" onClick={props.onDelete} \n                   className=\"favicon\">\n                     <span className=\"fa fa-trash\"/>\n                  </Button>\n                  <Button size=\"sm\" onClick={props.onEdit} className=\"favicon\">\n                     <span className=\"fa fa-edit\"/>\n                  </Button>\n               </Col>\n               : ''}\n         </Row>\n      </ListGroupItem>\n   )\n}\n"]},"metadata":{},"sourceType":"module"}