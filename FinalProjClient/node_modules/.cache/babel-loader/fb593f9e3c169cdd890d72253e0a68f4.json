{"ast":null,"code":"var _jsxFileName = \"/Users/SeanQuinn/Desktop/ReactJS3/src/components/Cnvs/CnvDetail.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ListGroup, ListGroupItem, Col, Row, Button } from 'react-bootstrap';\nimport CnvModal from './CnvModal';\nimport { ConfDialog } from '../components'; //import {delCnv} from '../../api';\n\nimport './CnvOverview.css';\nexport default class CnvDetail extends Component {\n  constructor(props) {\n    let messages = this.props.updateMsgs(cnvId);\n    super(props);\n\n    this.openModal = cnv => {\n      this.setState({\n        showModal: true,\n        editCnv: cnv\n      });\n    };\n\n    this.modalDismiss = result => {\n      if (result.status === \"Ok\") {\n        if (this.state.editCnv) this.modCnv(result);else this.newCnv(result);\n      }\n\n      this.setState({\n        showModal: false,\n        editCnv: null\n      });\n    };\n\n    this.openConfirmation = cnv => {\n      this.setState({\n        delCnv: cnv,\n        showConfirmation: true\n      });\n    };\n\n    this.closeConfirmation = res => {\n      if (res === \"Yes\") {\n        this.props.delCnv(this.state.delCnv.id);\n        this.props.updateCnvs();\n        this.setState({\n          showConfirmation: false,\n          delCnv: null\n        });\n      } else {\n        console.log(res);\n        this.setState({\n          showConfirmation: false,\n          delCnv: null\n        });\n      }\n    };\n\n    this.openEdit = cnv => {\n      this.setState({\n        delCnv: cnv,\n        showConfirmation: true\n      });\n    };\n\n    this.state = {\n      showModal: false,\n      showConfirmation: false,\n      messages: messages\n    };\n  } // Open a model with a |cnv| (optional)\n\n\n  modCnv(result) {\n    this.props.modCnv(this.state.editCnv.id, result.title);\n    this.props.updateCnvs();\n  }\n\n  newCnv(result) {\n    this.props.addCnv({\n      title: result.title\n    });\n  }\n\n  render() {\n    console.log(\"Rerendering Cnv Detail \", this.props);\n    console.log(this.props.location.pathname.split('/')[2]);\n    let cnvId = this.props.location.pathname.split('/')[2];\n    console.log(this.props.updateMsgs(cnvId));\n    var messages = this.props.updateMsgs(cnvId);\n    var people = [];\n    messages.forEach(msg => people.push(this.props.getPerson(msg.prsId)));\n    var msgItems = [];\n    console.log(messages);\n    messages.forEach((msg, idx) => {\n      msgItems.push(React.createElement(MsgItem, {\n        key: msg.id,\n        content: msg.content,\n        id: msg.id,\n        email: people[idx].email //showControls={cnv.ownerId === this.props.Prss.id}\n        ,\n        onDelete: () => this.openConfirmation(msg),\n        onEdit: () => this.openModal(msg),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"section\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Conversation Detail\"), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, msgItems), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.openModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"New Conversation\"), React.createElement(CnvModal, {\n      showModal: this.state.showModal //show={this.state.showEdit}\n      ,\n      title: this.state.editCnv ? \"Edit title\" : \"New Conversation\",\n      cnv: this.state.editCnv,\n      onDismiss: this.modalDismiss,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(ConfDialog, {\n      show: this.state.showConfirmation,\n      title: \"Delete Conversation\",\n      body: \"Are you sure you want to delete the Conversation\\n           '\".concat(this.state.delCnv ? this.state.delCnv.title : '', \"'\"),\n      buttons: ['Yes', 'Abort'],\n      onClose: this.closeConfirmation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  }\n\n} //Create a MsgItem Component to show each message. This component shows on a top line the posting date and email of the poster, \n//and beneath that line the text content of the message, whose appearance is toggled on and off by clicking on the top line.\n\nconst MsgItem = function (props) {\n  return React.createElement(ListGroupItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, new Intl.DateTimeFormat('us', {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\"\n  }).format(new Date(props.whenMade))), React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, \"props.title\"), React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, \"props.email\")));\n}; // A Cnv list item\n\n\nconst CnvItem = function (props) {\n  return React.createElement(ListGroupItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/CnvDetail/\" + props.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, props.title)), props.lastMessage ? React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, new Intl.DateTimeFormat('us', {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\"\n  }).format(new Date(props.lastMessage))) : React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, \" Null \"), props.showControls ? React.createElement(\"div\", {\n    className: \"float-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"sm\",\n    onClick: props.onDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"fa fa-thumbs-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })), React.createElement(Button, {\n    size: \"sm\",\n    onClick: props.onEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"fa fa-edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }))) : ''));\n};","map":{"version":3,"sources":["/Users/SeanQuinn/Desktop/ReactJS3/src/components/Cnvs/CnvDetail.jsx"],"names":["React","Component","Link","ListGroup","ListGroupItem","Col","Row","Button","CnvModal","ConfDialog","CnvDetail","constructor","props","messages","updateMsgs","cnvId","openModal","cnv","setState","showModal","editCnv","modalDismiss","result","status","state","modCnv","newCnv","openConfirmation","delCnv","showConfirmation","closeConfirmation","res","id","updateCnvs","console","log","openEdit","title","addCnv","render","location","pathname","split","people","forEach","msg","push","getPerson","prsId","msgItems","idx","content","email","MsgItem","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Date","whenMade","CnvItem","lastMessage","showControls","onDelete","onEdit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {ListGroup, ListGroupItem, Col, Row, Button} from 'react-bootstrap';\nimport CnvModal from './CnvModal';\nimport {ConfDialog} from '../components';\n//import {delCnv} from '../../api';\nimport './CnvOverview.css';\n\nexport default class CnvDetail extends Component {\n   constructor(props) {\n      let messages = this.props.updateMsgs(cnvId)\n      super(props);\n      this.state = {\n         showModal: false,\n         showConfirmation: false,\n         messages: messages\n      }\n   }\n\n   // Open a model with a |cnv| (optional)\n   openModal = (cnv) => {\n      this.setState({showModal: true, editCnv: cnv});\n   }\n\n   modalDismiss = (result) => {\n      if (result.status === \"Ok\") {\n         if (this.state.editCnv)\n            this.modCnv(result);\n         else\n            this.newCnv(result);\n      }\n      this.setState({ showModal: false, editCnv: null });\n   }\n\n   modCnv(result) {\n      this.props.modCnv(this.state.editCnv.id, result.title);\n      this.props.updateCnvs();\n   }\n\n   newCnv(result) {\n      this.props.addCnv({ title: result.title });\n   }\n\n   openConfirmation = (cnv) => {\n      this.setState({ delCnv: cnv, showConfirmation: true })\n   }\n\n   closeConfirmation = (res) => {\n      if(res === \"Yes\"){\n         this.props.delCnv(this.state.delCnv.id);\n         this.props.updateCnvs();\n         this.setState({showConfirmation: false, delCnv: null });\n      } else {\n         console.log(res)\n         this.setState({ showConfirmation: false, delCnv: null });\n      }\n      \n   }\n\n   openEdit = (cnv) => {\n      this.setState({ delCnv: cnv, showConfirmation: true })\n   }\n\n   render() {\n      console.log(\"Rerendering Cnv Detail \", this.props);\n      console.log(this.props.location.pathname.split('/')[2])\n      let cnvId = this.props.location.pathname.split('/')[2];\n      console.log(this.props.updateMsgs(cnvId));\n      var messages = this.props.updateMsgs(cnvId);\n      var people = []\n      messages.forEach(msg => people.push(this.props.getPerson(msg.prsId)))\n\n      var msgItems = [];\n      console.log(messages);\n      messages.forEach((msg, idx) => {\n         msgItems.push(<MsgItem\n               key={msg.id}\n               content={msg.content}\n               id={msg.id}\n               email={people[idx].email}\n               //showControls={cnv.ownerId === this.props.Prss.id}\n               onDelete={() => this.openConfirmation(msg)}\n               onEdit={() => this.openModal(msg)} />);\n      });\n\n      return (\n         <section className=\"container\">\n            <h1>Conversation Detail</h1>\n            <ListGroup>\n               {msgItems}\n            </ListGroup>\n            <Button variant=\"primary\" onClick=\n               {() => this.openModal()}>New Conversation</Button>\n            {/* Modal for creating and change cnv */}\n            <CnvModal\n               showModal={this.state.showModal}\n               //show={this.state.showEdit}\n               title={this.state.editCnv ? \"Edit title\" : \"New Conversation\"}\n               cnv={this.state.editCnv}\n               onDismiss={this.modalDismiss} />\n            <ConfDialog\n               show={this.state.showConfirmation}\n               title=\"Delete Conversation\"\n               body={`Are you sure you want to delete the Conversation\n           '${this.state.delCnv ? this.state.delCnv.title : ''}'`}\n               buttons={['Yes', 'Abort']}\n               onClose={this.closeConfirmation} />\n         </section>\n      )\n   }\n}\n\n//Create a MsgItem Component to show each message. This component shows on a top line the posting date and email of the poster, \n//and beneath that line the text content of the message, whose appearance is toggled on and off by clicking on the top line.\n\nconst MsgItem = function (props) {\n   return (\n      <ListGroupItem>\n         <Row>\n            \n            <Col sm={4}>{new Intl.DateTimeFormat('us',\n               {\n                  year: \"numeric\", month: \"short\", day: \"numeric\",\n                  hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\"\n               })\n               .format(new Date(props.whenMade))}\n            </Col>\n            <Col sm={4}>\n               props.title\n            </Col>\n            <Col sm={4}>\n               props.email\n            </Col>\n            \n         </Row>\n      </ListGroupItem>\n   )\n}\n\n// A Cnv list item\nconst CnvItem = function (props) {\n   return (\n      <ListGroupItem>\n         <Row> \n            <Col sm={4}>\n               <Link to={\"/CnvDetail/\" + props.id}>{props.title}</Link>\n            </Col>\n            {\n               props.lastMessage ? \n\n               <Col sm={4}>{new Intl.DateTimeFormat('us',\n               {\n                  year: \"numeric\", month: \"short\", day: \"numeric\",\n                  hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\"\n               })\n               .format(new Date(props.lastMessage))}\n               </Col> \n               : \n               <Col sm={4}> Null </Col>\n            }\n            \n            {props.showControls ?\n               <div className=\"float-right\">\n                  <Button size=\"sm\" onClick={props.onDelete}>\n                     <span className=\"fa fa-thumbs-up\"/>\n                  </Button>\n                  <Button size=\"sm\" onClick={props.onEdit}>\n                     <span className=\"fa fa-edit\"/>\n                  </Button>\n               </div>\n               : ''}\n         </Row>\n      </ListGroupItem>\n   )\n}\n"]},"metadata":{},"sourceType":"module"}