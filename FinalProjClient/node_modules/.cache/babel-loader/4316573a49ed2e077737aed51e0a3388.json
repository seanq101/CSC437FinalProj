{"ast":null,"code":"var _jsxFileName = \"/Users/SeanQuinn/Desktop/FinalProjClient/src/components/Ents/EntModal.jsx\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Form, FormControl, FormGroup } from 'react-bootstrap';\nexport default class EntModal extends Component {\n  //title varchar(80) not null,\n  // waveHeight int not null,\n  // content varchar(1000) not null,\n  // rating int not null,\n  // loc varchar(80) not null,\n  // public int not null,\n  // whenSurfed datetime(3) not null,\n  constructor(props) {\n    super(props);\n\n    this.close = result => {\n      let _this$state = this.state,\n          title = _this$state.title,\n          waveHeight = _this$state.waveHeight,\n          content = _this$state.content,\n          rating = _this$state.rating,\n          loc = _this$state.loc,\n          pub = _this$state.pub,\n          whenSurfed = _this$state.whenSurfed,\n          picURL = _this$state.picURL;\n      const newEnt = {\n        title,\n        waveHeight,\n        content,\n        rating,\n        loc,\n        pub,\n        whenSurfed,\n        picURL\n      };\n      this.props.addEntry(newEnt, () => {\n        this.setState({\n          offerSignIn: true\n        });\n      });\n      console.log(\"props: \", this.props);\n      this.props.onDismiss && this.props.onDismiss({\n        status: result,\n        newEnt: newEnt\n      });\n    };\n\n    this.getValidationState = () => {\n      if (this.state.cnvTitle) {\n        return null;\n      }\n\n      return \"warning\";\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        cnvTitle: e.target.value\n      });\n    };\n\n    this.componentWillReceiveProps = nextProps => {\n      if (nextProps.showModal) {\n        this.setState({\n          cnvTitle: nextProps.cnv && nextProps.cnv.title || \"\"\n        });\n      }\n    };\n\n    this.state = {\n      title: '',\n      waveHeight: '',\n      content: '',\n      rating: '',\n      loc: '',\n      pub: false,\n      whenSurfed: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  submit() {\n    let _this$state2 = this.state,\n        title = _this$state2.title,\n        waveHeight = _this$state2.waveHeight,\n        content = _this$state2.content,\n        rating = _this$state2.rating,\n        loc = _this$state2.loc,\n        pub = _this$state2.pub,\n        whenSurfed = _this$state2.whenSurfed,\n        picURL = _this$state2.picURL;\n    const newEnt = {\n      title,\n      waveHeight,\n      content,\n      rating,\n      loc,\n      pub,\n      whenSurfed,\n      picURL\n    };\n    this.props.addEntry(newEnt, () => {\n      this.setState({\n        offerSignIn: true\n      });\n    });\n  }\n\n  handleChange(ev) {\n    let newState = {};\n\n    switch (ev.target.type) {\n      case 'checkbox':\n        if (ev.target.id === \"public\") {\n          if (ev.target.checked) newState[ev.target.id] = 1;else newState[ev.target.id] = 0;\n        } else {\n          newState[ev.target.id] = ev.target.checked;\n        }\n\n        break;\n\n      default:\n        newState[ev.target.id] = ev.target.value;\n    }\n\n    this.setState(newState);\n  }\n\n  formValid() {\n    let s = this.state;\n    return s.title && s.waveHeight && s.content && s.rating && s.loc && s.whenSurfed;\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      show: this.props.showModal,\n      onHide: () => this.close(\"Cancel\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Create a New Journal Entry\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => e.preventDefault() || this.state.cnvTitle.length ? this.close(\"Ok\") : this.close(\"Cancel\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(FieldGroup, {\n      id: \"title\",\n      type: \"text\",\n      label: \"Title\",\n      placeholder: \"Enter title\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(FieldGroup, {\n      id: \"content\",\n      type: \"text\",\n      label: \"Notes On The Session\",\n      placeholder: \"Enter how it went\",\n      value: this.state.content,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(FieldGroup, {\n      id: \"loc\",\n      type: \"text\",\n      label: \"Location\",\n      placeholder: \"Enter location\",\n      value: this.state.loc,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(DropdownButton, {\n      id: \"rating\",\n      title: \"Surf Rating\",\n      value: this.state.rating,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"1 Star\"), React.createElement(Dropdown.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"2 Stars\"), React.createElement(Dropdown.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"3 Stars\"), React.createElement(Dropdown.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"4 Stars\"), React.createElement(Dropdown.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"5 Stars\")), React.createElement(FieldGroup, {\n      id: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(FieldGroup, {\n      id: \"passwordTwo\",\n      type: \"password\",\n      label: \"Repeat Password\",\n      value: this.state.passwordTwo,\n      onChange: this.handleChange,\n      required: true,\n      help: \"Repeat your password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(Form.Check, {\n      id: \"termsAccepted\",\n      value: this.state.termsAccepted,\n      onChange: this.handleChange,\n      label: \"Do you accept the terms and conditions?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      disabled: !this.formValid(),\n      onClick: () => this.close(\"Ok\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Ok\"), React.createElement(Button, {\n      onClick: () => this.close(\"Cancel\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/SeanQuinn/Desktop/FinalProjClient/src/components/Ents/EntModal.jsx"],"names":["React","Component","Modal","Button","Form","FormControl","FormGroup","EntModal","constructor","props","close","result","state","title","waveHeight","content","rating","loc","pub","whenSurfed","picURL","newEnt","addEntry","setState","offerSignIn","console","log","onDismiss","status","getValidationState","cnvTitle","handleChange","e","target","value","componentWillReceiveProps","nextProps","showModal","cnv","bind","submit","ev","newState","type","id","checked","formValid","s","render","preventDefault","length","password","passwordTwo","termsAccepted"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Button, Form, FormControl, FormGroup } from 'react-bootstrap';\n\nexport default class EntModal extends Component {\n   //title varchar(80) not null,\n// waveHeight int not null,\n// content varchar(1000) not null,\n// rating int not null,\n// loc varchar(80) not null,\n// public int not null,\n// whenSurfed datetime(3) not null,\n\n   constructor(props) {\n      super(props);\n      this.state = {\n         title: '',\n         waveHeight: '',\n         content: '',\n         rating: '',\n         loc: '',\n         pub: false,\n         whenSurfed: 0\n      }\n      this.handleChange = this.handleChange.bind(this);\n   }\n\n   submit() {\n      let { // Make a copy of the relevant values in current state\n         title,\n         waveHeight,\n         content,\n         rating,\n         loc,\n         pub,\n         whenSurfed, \n         picURL\n      } = this.state;\n\n      const newEnt = {\n         title,\n         waveHeight,\n         content,\n         rating,\n         loc,\n         pub,\n         whenSurfed, picURL\n      };\n\n      this.props.addEntry(newEnt, () => {this.setState({offerSignIn: true})});\n   }\n\n   handleChange(ev) {\n      let newState = {};\n\n      switch (ev.target.type) {\n      case 'checkbox':\n         if (ev.target.id === \"public\"){\n            if (ev.target.checked)\n               newState[ev.target.id] = 1;\n            else\n               newState[ev.target.id] = 0;\n         } else {\n            newState[ev.target.id] = ev.target.checked;\n         }\n         \n         break;\n      default:\n         newState[ev.target.id] = ev.target.value;\n      }\n      this.setState(newState);\n   }\n\n   formValid() {\n      let s = this.state;\n\n      return s.title && s.waveHeight && s.content && s.rating && s.loc\n       && s.whenSurfed;\n   }\n\n   close = (result) => {\n      let { // Make a copy of the relevant values in current state\n         title,\n         waveHeight,\n         content,\n         rating,\n         loc,\n         pub,\n         whenSurfed,\n         picURL\n      } = this.state;\n\n      const newEnt = {\n         title,\n         waveHeight,\n         content,\n         rating,\n         loc,\n         pub,\n         whenSurfed,\n         picURL\n      };\n\n      this.props.addEntry(newEnt, () => {this.setState({offerSignIn: true})});\n\n      console.log(\"props: \", this.props);\n      this.props.onDismiss && this.props.onDismiss({\n         status: result,\n         newEnt: newEnt\n      });\n   }\n\n   getValidationState = () => {\n      if (this.state.cnvTitle) {\n         return null;\n      }\n      return \"warning\";\n   }\n\n   handleChange = (e) => {\n      this.setState({cnvTitle: e.target.value});\n   }\n\n   componentWillReceiveProps = (nextProps) => {\n      if (nextProps.showModal) {\n         this.setState(\n          { cnvTitle: (nextProps.cnv && nextProps.cnv.title) || \"\" })\n      }\n   }\n\n   render() {\n      return (\n         <Modal show={this.props.showModal} onHide={() => this.close(\"Cancel\")}>\n            <Modal.Header closeButton>\n               <Modal.Title>Create a New Journal Entry</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n               <form onSubmit={(e) =>\n                  e.preventDefault() || this.state.cnvTitle.length ?\n                     this.close(\"Ok\") : this.close(\"Cancel\")}>\n\n                     <FieldGroup id=\"title\" type=\"text\" label=\"Title\"\n                     placeholder=\"Enter title\" value={this.state.title}\n                     onChange={this.handleChange} required={true}\n                     />\n\n                     <FieldGroup id=\"content\" type=\"text\" \n                      label=\"Notes On The Session\"\n                      placeholder=\"Enter how it went\" \n                      value={this.state.content}\n                      onChange={this.handleChange}\n                      />\n\n                     <FieldGroup id=\"loc\" type=\"text\" label=\"Location\"\n                      placeholder=\"Enter location\" value={this.state.loc}\n                      onChange={this.handleChange} required={true}\n                      />\n\n                     <DropdownButton id=\"rating\" title=\"Surf Rating\"\n                      value={this.state.rating} onChange={this.handleChange}\n                      required={true}>\n                        <Dropdown.Item >1 Star</Dropdown.Item>\n                        <Dropdown.Item >2 Stars</Dropdown.Item>\n                        <Dropdown.Item >3 Stars</Dropdown.Item>\n                        <Dropdown.Item >4 Stars</Dropdown.Item>\n                        <Dropdown.Item >5 Stars</Dropdown.Item>\n                     </DropdownButton>\n\n                     <FieldGroup id=\"password\" type=\"password\" label=\"Password\"\n                      value={this.state.password}\n                      onChange={this.handleChange} required={true}\n                      />\n\n                     <FieldGroup id=\"passwordTwo\" type=\"password\" label=\"Repeat Password\"\n                      value={this.state.passwordTwo}\n                      onChange={this.handleChange} required={true}\n                      help=\"Repeat your password\"\n                      />\n\n                     <Form.Check  id=\"termsAccepted\"\n                      value={this.state.termsAccepted} onChange={this.handleChange}\n                      label=\"Do you accept the terms and conditions?\"/>\n\n                  {/* <FormGroup controlId=\"formBasicText\">\n                     <Form.Label>{this.props.forMsg? '' : \n                     \"Conversation Title\"}</Form.Label>\n                     <FormControl\n                        type=\"text\"\n                        value={this.state.cnvTitle}\n                        placeholder=\"Enter text\"\n                        onChange={this.handleChange}\n                     />\n                     <FormControl.Feedback />\n                     {\n                        !(this.state.cnvTitle) && \n                        <Form.Text className=\"text-muted\">\n                           Title is required\n                        </Form.Text>\n                     }\n                     \n                  </FormGroup> */}\n               </form>\n            </Modal.Body>\n            <Modal.Footer>\n               <Button variant=\"primary\" disabled={!this.formValid()} \n                onClick={() => this.close(\"Ok\")}>Ok</Button>\n               <Button onClick={() => this.close(\"Cancel\")}>Cancel</Button>\n            </Modal.Footer>\n         </Modal>)\n   }\n}"]},"metadata":{},"sourceType":"module"}