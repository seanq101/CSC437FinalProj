{"ast":null,"code":"var _jsxFileName = \"/Users/SeanQuinn/Desktop/ReactJS3/src/components/Cnvs/CnvOverview.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ListGroup, ListGroupItem, Col, Row, Button } from 'react-bootstrap';\nimport CnvModal from './CnvModal';\nimport { ConfDialog } from '../components';\nimport { delCnv } from '../../api';\nimport './CnvOverview.css';\nexport default class CnvOverview extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openModal = cnv => {\n      this.setState({\n        showModal: true,\n        cnv: cnv\n      });\n    };\n\n    this.modalDismiss = result => {\n      if (result.status === \"OK\") {\n        if (this.state.editCnv) this.modCnv(result);else this.newCnv(result);\n      }\n\n      this.setState({\n        showModal: false,\n        editCnv: null\n      });\n    };\n\n    this.openConfirmation = cnv => {\n      this.setState({\n        delCnv: cnv,\n        showConfirmation: true\n      });\n    };\n\n    this.closeConfirmation = res => {\n      this.state.showConfirmation = false;\n    };\n\n    this.props.updateCnvs();\n    this.state = {\n      showModal: false,\n      showConfirmation: false\n    };\n  } // Open a model with a |cnv| (optional)\n\n\n  modCnv(result) {\n    this.props.modCnv(this.state.editCnv, result.cnvTitle);\n  }\n\n  newCnv(result) {\n    this.props.addCnv({\n      title: result.cnvTitle\n    });\n  }\n\n  render() {\n    console.log(\"Rerendering Cnv Overview \", this.props);\n    var cnvItems = [];\n    this.props.Cnvs.forEach(cnv => {\n      if (!this.props.userOnly || this.props.Prss.id === cnv.ownerId) cnvItems.push(React.createElement(CnvItem, {\n        key: cnv.id,\n        showControls: cnv.ownerId === this.props.Prss.id,\n        onDelete: () => this.openConfirmation(cnv),\n        onEdit: () => this.openModal(cnv),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"section\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Cnv Overview\"), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, cnvItems), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: function () {\n        this.openModal();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"New Conversation\"), React.createElement(CnvModal, {\n      showModal: this.state.showModal,\n      title: this.state.editCnv ? \"Edit title\" : \"New Conversation\",\n      cnv: this.state.editCnv,\n      onDismiss: this.modalDismiss,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(ConfDialog, {\n      show: this.state.showConfirmation,\n      title: \"Delete Conversation\",\n      body: \"Are you sure you want to delete the Conversation\\n           '\".concat(this.state.delCnv ? this.state.delCnv.title : '', \"'\"),\n      buttons: ['Yes', 'Abort'],\n      onClose: this.closeConfirmation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }));\n  }\n\n} // A Cnv list item\n\nconst CnvItem = function (props) {\n  return React.createElement(ListGroupItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/CnvDetail/\" + props.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, props.title)), React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, new Intl.DateTimeFormat('us', {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\"\n  }).format(new Date(props.lastMessage))), props.showControls ? React.createElement(\"div\", {\n    className: \"float-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"sm\",\n    onClick: props.onDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    class: \"fa fa-thumbs-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(Button, {\n    size: \"sm\",\n    onClick: props.onEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    class: \"fa fa-edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }))) : ''));\n};","map":{"version":3,"sources":["/Users/SeanQuinn/Desktop/ReactJS3/src/components/Cnvs/CnvOverview.jsx"],"names":["React","Component","Link","ListGroup","ListGroupItem","Col","Row","Button","CnvModal","ConfDialog","delCnv","CnvOverview","constructor","props","openModal","cnv","setState","showModal","modalDismiss","result","status","state","editCnv","modCnv","newCnv","openConfirmation","showConfirmation","closeConfirmation","res","updateCnvs","cnvTitle","addCnv","title","render","console","log","cnvItems","Cnvs","forEach","userOnly","Prss","id","ownerId","push","CnvItem","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Date","lastMessage","showControls","onDelete","onEdit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {ListGroup, ListGroupItem, Col, Row, Button} from 'react-bootstrap';\nimport CnvModal from './CnvModal';\nimport {ConfDialog} from '../components';\nimport {delCnv} from '../../api';\nimport './CnvOverview.css';\n\nexport default class CnvOverview extends Component {\n   constructor(props) {\n      super(props);\n\n      this.props.updateCnvs();\n      this.state = {\n         showModal: false,\n         showConfirmation: false,\n      }\n   }\n\n   // Open a model with a |cnv| (optional)\n   openModal = (cnv) => {\n      this.setState({showModal: true, cnv: cnv});\n   }\n\n   modalDismiss = (result) => {\n      if (result.status === \"OK\") {\n         if (this.state.editCnv)\n            this.modCnv(result);\n         else\n            this.newCnv(result);\n      }\n      this.setState({ showModal: false, editCnv: null });\n   }\n\n   modCnv(result) {\n      this.props.modCnv(this.state.editCnv, result.cnvTitle);\n   }\n\n   newCnv(result) {\n      this.props.addCnv({ title: result.cnvTitle });\n   }\n\n   openConfirmation = (cnv) => {\n      this.setState({ delCnv: cnv, showConfirmation: true })\n   }\n\n   closeConfirmation = (res) => {\n      this.state.showConfirmation = false;\n   }\n\n   render() {\n      console.log(\"Rerendering Cnv Overview \", this.props);\n      var cnvItems = [];\n\n      this.props.Cnvs.forEach(cnv => {\n         if (!this.props.userOnly || this.props.Prss.id === cnv.ownerId)\n            cnvItems.push(<CnvItem\n               key={cnv.id} \n               showControls={cnv.ownerId === this.props.Prss.id}\n               onDelete={() => this.openConfirmation(cnv)}\n               onEdit={() => this.openModal(cnv)} />);\n      });\n\n      return (\n         <section className=\"container\">\n            <h1>Cnv Overview</h1>\n            <ListGroup>\n               {cnvItems}\n            </ListGroup>\n            <Button variant=\"primary\" onClick=\n               {function() {this.openModal()}}>New Conversation</Button>\n            {/* Modal for creating and change cnv */}\n            <CnvModal\n               showModal={this.state.showModal}\n               title={this.state.editCnv ? \"Edit title\" : \"New Conversation\"}\n               cnv={this.state.editCnv}\n               onDismiss={this.modalDismiss} />\n            <ConfDialog\n               show={this.state.showConfirmation}\n               title=\"Delete Conversation\"\n               body={`Are you sure you want to delete the Conversation\n           '${this.state.delCnv ? this.state.delCnv.title : ''}'`}\n               buttons={['Yes', 'Abort']}\n               onClose={this.closeConfirmation} />\n         </section>\n      )\n   }\n}\n\n// A Cnv list item\nconst CnvItem = function (props) {\n   return (\n      <ListGroupItem>\n         <Row> \n            <Col sm={4}>\n               <Link to={\"/CnvDetail/\" + props.id}>{props.title}</Link>\n            </Col>\n            <Col sm={4}>{new Intl.DateTimeFormat('us',\n               {\n                  year: \"numeric\", month: \"short\", day: \"numeric\",\n                  hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\"\n               })\n               .format(new Date(props.lastMessage))}\n            </Col>\n            {props.showControls ?\n               <div className=\"float-right\">\n                  <Button size=\"sm\" onClick={props.onDelete}>\n                     <span class=\"fa fa-thumbs-up\"/>\n                  </Button>\n                  <Button size=\"sm\" onClick={props.onEdit}>\n                     <span class=\"fa fa-edit\"/>\n                  </Button>\n               </div>\n               : ''}\n         </Row>\n      </ListGroupItem>\n   )\n}\n"]},"metadata":{},"sourceType":"module"}