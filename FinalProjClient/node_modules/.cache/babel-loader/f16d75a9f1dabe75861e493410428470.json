{"ast":null,"code":"var _jsxFileName = \"/Users/SeanQuinn/Desktop/ReactJS3/src/components/Cnvs/MsgModal.jsx\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Form, FormControl, FormGroup } from 'react-bootstrap';\nexport default class MsgModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.close = result => {\n      console.log(\"props: \", this.props);\n      this.props.onDismiss && this.props.onDismiss({\n        status: result,\n        message: this.state.message\n      });\n    };\n\n    this.getValidationState = () => {\n      if (this.state.message) {\n        return null;\n      }\n\n      return \"warning\";\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        message: e.target.value\n      });\n    };\n\n    this.componentWillReceiveProps = nextProps => {\n      if (nextProps.showModal) {\n        this.setState({\n          message: nextProps.cnv && nextProps.cnv.title || \"\"\n        });\n      }\n    };\n\n    this.state = {\n      message: this.props.cnv && this.props.cnv.title || \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      show: this.props.showModal,\n      onHide: () => this.close(\"Cancel\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, this.props.title)), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => e.preventDefault() || this.state.message.length ? this.close(\"Ok\") : this.close(\"Cancel\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"formBasicText\",\n      validationstate: this.getValidationState(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.forMsg ? '' : \"Conversation Title\"), React.createElement(FormControl, {\n      as: \"textarea\",\n      value: this.state.message,\n      placeholder: \"Enter text\",\n      onChange: this.handleChange,\n      rows: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(FormControl.Feedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: () => this.close(\"Ok\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Ok\"), React.createElement(Button, {\n      onClick: () => this.close(\"Cancel\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/SeanQuinn/Desktop/ReactJS3/src/components/Cnvs/MsgModal.jsx"],"names":["React","Component","Modal","Button","Form","FormControl","FormGroup","MsgModal","constructor","props","close","result","console","log","onDismiss","status","message","state","getValidationState","handleChange","e","setState","target","value","componentWillReceiveProps","nextProps","showModal","cnv","title","render","preventDefault","length","forMsg"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Modal, Button, Form, FormControl, FormGroup\n} from 'react-bootstrap';\n\nexport default class MsgModal extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         message: (this.props.cnv && this.props.cnv.title) || \"\",\n      }\n   }\n\n   close = (result) => {\n      console.log(\"props: \", this.props);\n      this.props.onDismiss && this.props.onDismiss({\n         status: result,\n         message: this.state.message\n      });\n   }\n\n   getValidationState = () => {\n      if (this.state.message) {\n         return null;\n      }\n      return \"warning\";\n   }\n\n   handleChange = (e) => {\n      this.setState({message: e.target.value});\n   }\n\n   componentWillReceiveProps = (nextProps) => {\n      if (nextProps.showModal) {\n         this.setState(\n          { message: (nextProps.cnv && nextProps.cnv.title) || \"\" })\n      }\n   }\n\n   render() {\n      return (\n         <Modal show={this.props.showModal} onHide={() => this.close(\"Cancel\")}>\n            <Modal.Header closeButton>\n               <Modal.Title>{this.props.title}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n               <form onSubmit={(e) =>\n                  e.preventDefault() || this.state.message.length ?\n                     this.close(\"Ok\") : this.close(\"Cancel\")}>\n                  <FormGroup controlId=\"formBasicText\"\n                   validationstate={this.getValidationState()}\n                  >\n                     <Form.Label>{this.props.forMsg? '' : \"Conversation Title\"}</Form.Label>\n                     <FormControl\n                        as=\"textarea\"\n                        value={this.state.message}\n                        placeholder=\"Enter text\"\n                        onChange={this.handleChange}\n                        rows=\"4\"\n                     />\n                     <FormControl.Feedback />\n                     \n                     \n                  </FormGroup>\n               </form>\n            </Modal.Body>\n            <Modal.Footer>\n               <Button onClick={() => this.close(\"Ok\")}>Ok</Button>\n               <Button onClick={() => this.close(\"Cancel\")}>Cancel</Button>\n            </Modal.Footer>\n         </Modal>)\n   }\n}"]},"metadata":{},"sourceType":"module"}