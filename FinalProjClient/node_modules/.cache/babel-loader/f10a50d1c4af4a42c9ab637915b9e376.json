{"ast":null,"code":"var _jsxFileName = \"/Users/SeanQuinn/Desktop/FinalProjClient/src/components/Ents/MyEntsOverview.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ListGroup, ListGroupItem, Col, Row, Button } from 'react-bootstrap';\nimport { ConfDialog } from '../components';\nimport EntModal from './EntModal';\nexport default class MyEntsOverview extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openModal = cnv => {\n      this.setState({\n        showModal: true,\n        editCnv: cnv\n      });\n    };\n\n    this.modalDismiss = result => {\n      if (result.status === \"Ok\") {\n        result['ownerId'] = this.props.Prss.id;\n        this.newCnv(result.newEnt);\n      }\n\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.openConfirmation = cnv => {\n      this.setState({\n        delCnv: cnv,\n        showConfirmation: true\n      });\n    };\n\n    this.closeConfirmation = res => {\n      if (res === \"Yes\") {\n        this.props.delCnv(this.state.delCnv.id); //this.props.updateCnvs();\n\n        this.setState({\n          showConfirmation: false,\n          delCnv: null\n        });\n      } else {\n        console.log(res);\n        this.setState({\n          showConfirmation: false,\n          delCnv: null\n        });\n      }\n    };\n\n    this.openEdit = cnv => {\n      this.setState({\n        delCnv: cnv,\n        showConfirmation: true\n      });\n    };\n\n    this.props.getMyEntries();\n    this.state = {\n      showModal: false,\n      showConfirmation: false\n    };\n  } // Open a model with a |cnv| (optional)\n\n\n  modCnv(result) {\n    this.props.modCnv(this.state.editCnv.id, result.title);\n    this.props.updateCnvs();\n  }\n\n  newCnv(result) {\n    this.props.addEntry(result);\n  }\n\n  render() {\n    console.log(\"Rerendering My Ents Overview \", this.props);\n    var cnvItems = [];\n    console.log(this.props.Ents);\n    this.props.Ents.forEach(cnv => {\n      if (!this.props.userOnly || this.props.Prss.id === cnv.ownerId) cnvItems.push(React.createElement(CnvItem, {\n        key: cnv.id,\n        title: cnv.title,\n        lastMessage: cnv.lastMessage,\n        id: cnv.id,\n        showControls: cnv.ownerId === this.props.Prss.id || this.props.Prss.role === 1,\n        onDelete: () => this.openConfirmation(cnv),\n        onEdit: () => this.openModal(cnv),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"section\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Cnv Overview\"), React.createElement(ListGroup, {\n      className: \"padded\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, cnvItems), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.openModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"New Conversation\"), React.createElement(EntModal, {\n      showModal: this.state.showModal,\n      onDismiss: this.modalDismiss,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(ConfDialog, {\n      show: this.state.showConfirmation,\n      title: \"Delete Conversation\",\n      body: \"Are you sure you want to delete the Conversation\\n           '\".concat(this.state.delCnv ? this.state.delCnv.title : '', \"'\"),\n      buttons: ['Yes', 'Abort'],\n      onClose: this.closeConfirmation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n\n} // A Cnv list item\n\nconst CnvItem = function (props) {\n  return React.createElement(ListGroupItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 4,\n    className: \"float-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/CnvDetail/\" + props.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, props.title)), props.lastMessage ? React.createElement(Col, {\n    sm: 4,\n    className: \"float-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, new Intl.DateTimeFormat('us', {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\"\n  }).format(new Date(props.lastMessage))) : React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \" N/A \"), props.showControls ? React.createElement(Col, {\n    sm: 4,\n    className: \"float-right right-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"sm\",\n    onClick: props.onDelete,\n    className: \"favicon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"fa fa-trash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(Button, {\n    size: \"sm\",\n    onClick: props.onEdit,\n    className: \"favicon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"fa fa-edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }))) : ''));\n};","map":{"version":3,"sources":["/Users/SeanQuinn/Desktop/FinalProjClient/src/components/Ents/MyEntsOverview.jsx"],"names":["React","Component","Link","ListGroup","ListGroupItem","Col","Row","Button","ConfDialog","EntModal","MyEntsOverview","constructor","props","openModal","cnv","setState","showModal","editCnv","modalDismiss","result","status","Prss","id","newCnv","newEnt","openConfirmation","delCnv","showConfirmation","closeConfirmation","res","state","console","log","openEdit","getMyEntries","modCnv","title","updateCnvs","addEntry","render","cnvItems","Ents","forEach","userOnly","ownerId","push","lastMessage","role","CnvItem","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Date","showControls","onDelete","onEdit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {ListGroup, ListGroupItem, Col, Row, Button} from 'react-bootstrap';\nimport {ConfDialog} from '../components';\nimport EntModal from './EntModal';\n\nexport default class MyEntsOverview extends Component {\n   constructor(props) {\n      super(props);\n      this.props.getMyEntries();\n      this.state = {\n         showModal: false,\n         showConfirmation: false,\n      }\n   }\n\n   // Open a model with a |cnv| (optional)\n   openModal = (cnv) => {\n      this.setState({showModal: true, editCnv: cnv});\n   }\n\n   modalDismiss = (result) => {\n      if (result.status === \"Ok\") {\n         result['ownerId'] = this.props.Prss.id\n         this.newCnv(result.newEnt);\n      }\n      this.setState({ showModal: false });\n   }\n\n   modCnv(result) {\n      this.props.modCnv(this.state.editCnv.id, result.title);\n      this.props.updateCnvs();\n   }\n\n   newCnv(result) {\n      this.props.addEntry(result);\n   }\n\n   openConfirmation = (cnv) => {\n      this.setState({ delCnv: cnv, showConfirmation: true })\n   }\n\n   closeConfirmation = (res) => {\n      if(res === \"Yes\"){\n         this.props.delCnv(this.state.delCnv.id);\n         //this.props.updateCnvs();\n         this.setState({showConfirmation: false, delCnv: null });\n      } else {\n         console.log(res)\n         this.setState({ showConfirmation: false, delCnv: null });\n      }\n      \n   }\n\n   openEdit = (cnv) => {\n      this.setState({ delCnv: cnv, showConfirmation: true })\n   }\n\n   \n\n   render() {\n      console.log(\"Rerendering My Ents Overview \", this.props);\n      var cnvItems = [];\n      console.log(this.props.Ents)\n      this.props.Ents.forEach(cnv => {\n         if (!this.props.userOnly || this.props.Prss.id === cnv.ownerId)\n            cnvItems.push(<CnvItem\n               key={cnv.id}\n               title={cnv.title}\n               lastMessage={cnv.lastMessage}\n               id={cnv.id}\n               showControls={cnv.ownerId === this.props.Prss.id || \n                this.props.Prss.role === 1}\n               onDelete={() => this.openConfirmation(cnv)}\n               onEdit={() => this.openModal(cnv)} />);\n      });\n\n      return (\n         <section className=\"container\">\n            <h1>Cnv Overview</h1>\n\n            <ListGroup className=\"padded\">\n               {cnvItems}\n            </ListGroup>\n            <Button variant=\"primary\" onClick=\n               {() => this.openModal()}>New Conversation</Button>\n            {/* Modal for creating and change cnv */}\n            <EntModal\n               showModal={this.state.showModal}\n               onDismiss={this.modalDismiss} />\n            \n            <ConfDialog\n               show={this.state.showConfirmation}\n               title=\"Delete Conversation\"\n               body={`Are you sure you want to delete the Conversation\n           '${this.state.delCnv ? this.state.delCnv.title : ''}'`}\n               buttons={['Yes', 'Abort']}\n               onClose={this.closeConfirmation} />\n         </section>\n      )\n   }\n}\n\n// A Cnv list item\nconst CnvItem = function (props) {\n   return (\n      <ListGroupItem>\n         <Row> \n            <Col sm={4} className=\"float-left\">\n               <Link to={\"/CnvDetail/\" + props.id}>{props.title}</Link>\n            </Col>\n            {\n               props.lastMessage ? \n                  <Col sm={4} \n                   className=\"float-left\">{new Intl.DateTimeFormat('us',\n                  {\n                     year: \"numeric\", month: \"short\", day: \"numeric\",\n                     hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\"\n                  })\n                  .format(new Date(props.lastMessage))}\n                  </Col> \n                  : \n                  <Col sm={4}> N/A </Col>\n            }\n            \n            \n            {props.showControls ?\n               <Col sm={4} className=\"float-right right-text\">\n                  <Button size=\"sm\" onClick={props.onDelete} \n                   className=\"favicon\">\n                     <span className=\"fa fa-trash\"/>\n                  </Button>\n                  <Button size=\"sm\" onClick={props.onEdit} className=\"favicon\">\n                     <span className=\"fa fa-edit\"/>\n                  </Button>\n               </Col>\n               : ''}\n         </Row>\n      </ListGroupItem>\n   )\n}\n"]},"metadata":{},"sourceType":"module"}