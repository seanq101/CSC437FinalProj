{"ast":null,"code":"var _jsxFileName = \"/Users/SeanQuinn/Desktop/ReactJS3/src/components/Cnvs/CnvDetail.jsx\";\nimport React, { Component } from 'react';\nimport { ListGroup, ListGroupItem, Col, Row, Button, Form, FormControl, FormGroup } from 'react-bootstrap';\nimport './CnvOverview.css';\nexport default class CnvDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getValidationState = () => {\n      if (this.state.newMessage) {\n        return null;\n      }\n\n      return \"warning\";\n    };\n\n    this.formSubmit = event => {\n      this.props.addMsg({\n        content: this.state.newMessage\n      }, this.state.cnvId, () => {\n        this.setState({\n          people: [],\n          newMessage: ''\n        });\n        this.props.updateMsgs(this.state.cnvId, () => this.props.Msgs.forEach(msg => {\n          this.props.getPerson(msg.prsId, res => {\n            var temp = this.state.people;\n\n            if (temp[res.id] === undefined) {\n              temp[res.id] = res;\n            } //temp.push(res);\n\n\n            this.setState({\n              people: temp\n            });\n          }); // console.log(this.state.people.push(this.props.getPerson(msg.prsId)))\n        }));\n      });\n      console.log(this.state.newMessage);\n    };\n\n    this.formValid = () => {\n      return this.state.newMessage.length;\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        newMessage: e.target.value\n      });\n    };\n\n    let cnvId = this.props.location.pathname.split('/')[2]; //this.setState({people: this.state.people.push(this.props.getPerson(msg.prsId))}\n\n    this.props.updateMsgs(cnvId, () => this.props.Msgs.forEach(msg => {\n      this.props.getPerson(msg.prsId, res => {\n        var temp = this.state.people;\n\n        if (temp[res.id] === undefined) {\n          temp[res.id] = res;\n        } //temp.push(res);\n\n\n        this.setState({\n          people: temp\n        });\n      }); // console.log(this.state.people.push(this.props.getPerson(msg.prsId)))\n    }));\n    this.state = {\n      showModal: false,\n      showConfirmation: false,\n      newMessage: '',\n      cnvId: cnvId,\n      people: {}\n    };\n  }\n\n  render() {\n    console.log(\"Rerendering Cnv Detail \", this.state.messages);\n    var messages = this.props.Msgs;\n    console.log(messages);\n    console.log(this.state.people);\n    var msgItems = [];\n    var uniquePeople = {};\n    messages.forEach(msg => {\n      if (uniquePeople[msg.prsId] === undefined) {\n        uniquePeople[msg.prsId] = 1;\n      }\n    });\n\n    if (Object.keys(uniquePeople).length === Object.keys(this.state.people).length) {\n      messages.forEach((msg, idx) => {\n        msgItems.push(React.createElement(MsgItem, {\n          key: msg.id,\n          content: msg.content,\n          id: msg.id,\n          email: this.state.people[msg.prsId].email,\n          whenMade: msg.whenMade //showControls={cnv.ownerId === this.props.Prss.id}\n          ,\n          onDelete: () => this.openConfirmation(msg),\n          onEdit: () => this.openModal(msg),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }));\n      });\n    }\n\n    return React.createElement(\"section\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Conversation Detail\"), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Content\"), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Date\")), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, msgItems), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"formBasicText\",\n      validationstate: this.getValidationState(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"New Message: \"), React.createElement(FormControl, {\n      type: \"text\",\n      value: this.state.newMessage,\n      placeholder: \"Enter text\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(FormControl.Feedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), !this.state.newMessage && React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"A new message is required\")), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.formSubmit,\n      disabled: !this.formValid(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Create New Message\")))));\n  }\n\n} //Create a MsgItem Component to show each message. This component shows on a top line the posting date and email of the poster, \n//and beneath that line the text content of the message, whose appearance is toggled on and off by clicking on the top line.\n\nconst MsgItem = function (props) {\n  return React.createElement(ListGroupItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, props.content), React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, props.email), React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, new Intl.DateTimeFormat('us', {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\"\n  }).format(new Date(props.whenMade)))));\n};","map":{"version":3,"sources":["/Users/SeanQuinn/Desktop/ReactJS3/src/components/Cnvs/CnvDetail.jsx"],"names":["React","Component","ListGroup","ListGroupItem","Col","Row","Button","Form","FormControl","FormGroup","CnvDetail","constructor","props","getValidationState","state","newMessage","formSubmit","event","addMsg","content","cnvId","setState","people","updateMsgs","Msgs","forEach","msg","getPerson","prsId","res","temp","id","undefined","console","log","formValid","length","handleChange","e","target","value","location","pathname","split","showModal","showConfirmation","render","messages","msgItems","uniquePeople","Object","keys","idx","push","email","whenMade","openConfirmation","openModal","MsgItem","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Date"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {ListGroup, ListGroupItem, Col, Row, Button, Form, FormControl, FormGroup} from 'react-bootstrap';\nimport './CnvOverview.css';\n\nexport default class CnvDetail extends Component {\n   constructor(props) {\n      super(props);\n      let cnvId = this.props.location.pathname.split('/')[2];\n      //this.setState({people: this.state.people.push(this.props.getPerson(msg.prsId))}\n      this.props.updateMsgs(cnvId, \n         () => this.props.Msgs.forEach(msg => {\n            this.props.getPerson(msg.prsId, (res) => {\n               var temp = this.state.people;\n               if(temp[res.id] === undefined){\n                  temp[res.id] = res\n               }\n               //temp.push(res);\n               this.setState({people: temp})\n            })\n         \n            \n           // console.log(this.state.people.push(this.props.getPerson(msg.prsId)))\n         }))\n      this.state = {\n         showModal: false,\n         showConfirmation: false,\n         newMessage: '',\n         cnvId: cnvId,\n         people: {}\n      }\n   }\n\n   getValidationState = () => {\n      if (this.state.newMessage) {\n         return null;\n      }\n      return \"warning\";\n   }\n\n   formSubmit = (event) => {\n      this.props.addMsg({ content: this.state.newMessage }, this.state.cnvId,\n         () => {\n            this.setState({people: [], newMessage: ''})\n            this.props.updateMsgs(this.state.cnvId, \n               () => this.props.Msgs.forEach(msg => {\n                  this.props.getPerson(msg.prsId, (res) => {\n                     var temp = this.state.people;\n                     if(temp[res.id] === undefined){\n                        temp[res.id] = res\n                     }\n                     //temp.push(res);\n                     this.setState({people: temp})\n                  })\n               \n                  \n                 // console.log(this.state.people.push(this.props.getPerson(msg.prsId)))\n               }))\n         });\n      console.log(this.state.newMessage);\n   }\n\n   formValid = () => {\n      return this.state.newMessage.length\n   }\n\n   handleChange = (e) => {\n      this.setState({newMessage: e.target.value});\n   }\n\n   render() {\n      console.log(\"Rerendering Cnv Detail \", this.state.messages);\n\n      \n      var messages = this.props.Msgs;\n      console.log(messages)\n      console.log(this.state.people)\n      var msgItems = [];\n      var uniquePeople = {};\n      messages.forEach(msg => {\n         if(uniquePeople[msg.prsId] === undefined){\n            uniquePeople[msg.prsId] = 1;\n         }\n      })\n      if(Object.keys(uniquePeople).length === \n       Object.keys(this.state.people).length){\n         messages.forEach((msg, idx) => {\n            msgItems.push(<MsgItem\n                  key={msg.id}\n                  content={msg.content}\n                  id={msg.id}\n                  email={this.state.people[msg.prsId].email}\n                  whenMade={msg.whenMade}\n                  //showControls={cnv.ownerId === this.props.Prss.id}\n                  onDelete={() => this.openConfirmation(msg)}\n                  onEdit={() => this.openModal(msg)} />);\n         });\n      }\n      \n\n      return (\n         <section className=\"container\">\n            <h1>Conversation Detail</h1>\n            <Row>\n               <Col sm={4}>\n                  Content\n               </Col>\n               <Col sm={4}>\n                  Email\n               </Col>\n               <Col sm={4}>\n                  Date\n               </Col>\n            </Row>\n            \n            <ListGroup>\n               {msgItems}\n            </ListGroup>\n\n            <Form>\n\n               <FormGroup controlId=\"formBasicText\"\n                  validationstate={this.getValidationState()}\n               >\n                  <Form.Label>New Message: </Form.Label>\n                  <FormControl\n                     type=\"text\"\n                     value={this.state.newMessage}\n                     placeholder=\"Enter text\"\n                     onChange={this.handleChange}\n                  />\n                  <FormControl.Feedback />\n                  {\n                     !(this.state.newMessage) && \n                     <Form.Text className=\"text-muted\">\n                        A new message is required\n                     </Form.Text>\n                  }\n                  \n               </FormGroup>\n\n               <FormGroup>\n                  <Col>\n                     <Button onClick={this.formSubmit} disabled={!this.formValid()}>\n                        Create New Message\n                     </Button>\n                 </Col>\n               </FormGroup>\n\n            </Form>\n\n         \n            \n         </section>\n      )\n   }\n}\n\n//Create a MsgItem Component to show each message. This component shows on a top line the posting date and email of the poster, \n//and beneath that line the text content of the message, whose appearance is toggled on and off by clicking on the top line.\n\nconst MsgItem = function (props) {\n   return (\n      <ListGroupItem>\n         <Row>\n            \n            \n            <Col sm={4}>\n               {props.content}\n            </Col>\n            <Col sm={4}>\n               {props.email}\n            </Col>\n            <Col sm={4}>{new Intl.DateTimeFormat('us',\n               {\n                  year: \"numeric\", month: \"short\", day: \"numeric\",\n                  hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\"\n               })\n               .format(new Date(props.whenMade))}\n            </Col>\n            \n         </Row>\n      </ListGroupItem>\n   )\n}\n\n"]},"metadata":{},"sourceType":"module"}