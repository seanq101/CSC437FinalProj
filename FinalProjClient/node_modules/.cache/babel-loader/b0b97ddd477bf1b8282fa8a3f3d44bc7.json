{"ast":null,"code":"var _jsxFileName = \"/Users/SeanQuinn/Desktop/CSC437FinalProj/FinalProjClient/src/components/Boards/BoardRoom.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ListGroup, ListGroupItem, Col, Row, Button, Carousel } from 'react-bootstrap';\nimport { ConfDialog } from '../components';\nimport './BoardRoom.css';\nexport default class BoardRoom extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openModal = cnv => {\n      this.setState({\n        showModal: true,\n        editCnv: cnv\n      });\n    };\n\n    this.modalDismiss = result => {\n      if (result.status === \"Ok\") {\n        if (this.state.editCnv) this.modCnv(result);else this.newCnv(result);\n      }\n\n      this.setState({\n        showModal: false,\n        editCnv: null\n      });\n    };\n\n    this.openConfirmation = cnv => {\n      this.setState({\n        delCnv: cnv,\n        showConfirmation: true\n      });\n    };\n\n    this.closeConfirmation = res => {\n      if (res === \"Yes\") {\n        this.props.delCnv(this.state.delCnv.id); //this.props.updateCnvs();\n\n        this.setState({\n          showConfirmation: false,\n          delCnv: null\n        });\n      } else {\n        console.log(res);\n        this.setState({\n          showConfirmation: false,\n          delCnv: null\n        });\n      }\n    };\n\n    this.openEdit = cnv => {\n      this.setState({\n        delCnv: cnv,\n        showConfirmation: true\n      });\n    };\n\n    this.props.getBoards(this.props.Prss.id, boardsList => {\n      let boardDict = {};\n      this.props.getMyEntries(this.props.Prss.id, entsList => {\n        entsList.forEach(ent => {\n          if (boardDict[ent.boardId]) {\n            boardDict[ent.boardId].push(ent);\n          } else {\n            boardDict[ent.boardId] = [ent];\n          }\n        });\n        console.log(\"boardDict\", boardDict);\n        this.setState({\n          boardDict: boardDict\n        });\n      });\n    });\n    this.state = {\n      showModal: false,\n      showConfirmation: false,\n      boardDict: {}\n    };\n  } // Open a model with a |cnv| (optional)\n\n\n  modCnv(result) {\n    this.props.modCnv(this.state.editCnv.id, result.title);\n    this.props.updateCnvs();\n  }\n\n  newCnv(result) {\n    this.props.addCnv({\n      title: result.title\n    });\n  }\n\n  render() {\n    console.log(\"Rerendering Cnv Overview \", this.props);\n    var boards = [];\n    console.log(this.props.Cnvs);\n    this.props.Boards.forEach(board => {\n      if (!this.props.userOnly || this.props.Prss.id === board.prId) boards.push(React.createElement(Carousel.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"carousel-pic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"d-block w-100\",\n        src: board.picURL,\n        alt: \"First slide\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(Carousel.Caption, {\n        className: \"carousel-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, board.bName), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Nulla vitae elit libero, a pharetra augue mollis interdum.\"))));\n    });\n    return React.createElement(\"section\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"My Boards\"), React.createElement(Carousel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, boards), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.openModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Add A New Board\"), React.createElement(ConfDialog, {\n      show: this.state.showConfirmation,\n      title: \"Delete Conversation\",\n      body: \"Are you sure you want to delete the Conversation\\n           '\".concat(this.state.delCnv ? this.state.delCnv.title : '', \"'\"),\n      buttons: ['Yes', 'Abort'],\n      onClose: this.closeConfirmation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }));\n  }\n\n} // A Cnv list item\n\nconst CnvItem = function (props) {\n  return React.createElement(ListGroupItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 4,\n    className: \"float-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/CnvDetail/\" + props.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, props.title)), props.lastMessage ? React.createElement(Col, {\n    sm: 4,\n    className: \"float-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, new Intl.DateTimeFormat('us', {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\"\n  }).format(new Date(props.lastMessage))) : React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \" N/A \"), props.showControls ? React.createElement(Col, {\n    sm: 4,\n    className: \"float-right right-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"sm\",\n    onClick: props.onDelete,\n    className: \"favicon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"fa fa-trash\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  })), React.createElement(Button, {\n    size: \"sm\",\n    onClick: props.onEdit,\n    className: \"favicon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"fa fa-edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }))) : ''));\n};","map":{"version":3,"sources":["/Users/SeanQuinn/Desktop/CSC437FinalProj/FinalProjClient/src/components/Boards/BoardRoom.jsx"],"names":["React","Component","Link","ListGroup","ListGroupItem","Col","Row","Button","Carousel","ConfDialog","BoardRoom","constructor","props","openModal","cnv","setState","showModal","editCnv","modalDismiss","result","status","state","modCnv","newCnv","openConfirmation","delCnv","showConfirmation","closeConfirmation","res","id","console","log","openEdit","getBoards","Prss","boardsList","boardDict","getMyEntries","entsList","forEach","ent","boardId","push","title","updateCnvs","addCnv","render","boards","Cnvs","Boards","board","userOnly","prId","picURL","bName","CnvItem","lastMessage","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Date","showControls","onDelete","onEdit"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {ListGroup, ListGroupItem, Col, Row, Button, Carousel} from 'react-bootstrap';\nimport {ConfDialog} from '../components';\nimport './BoardRoom.css'\n\nexport default class BoardRoom extends Component {\n   constructor(props) {\n      super(props);\n      this.props.getBoards(this.props.Prss.id,\n         boardsList => {\n            let boardDict = {};\n            this.props.getMyEntries(this.props.Prss.id, \n               entsList => {\n                  entsList.forEach(ent => {\n                     if(boardDict[ent.boardId]){\n                        boardDict[ent.boardId].push(ent);\n                     } else {\n                        boardDict[ent.boardId] = [ent]\n                     }\n                  });\n                  console.log(\"boardDict\", boardDict)\n                  this.setState({boardDict: boardDict});\n               });\n         });\n      this.state = {\n         showModal: false,\n         showConfirmation: false,\n         boardDict: {}\n      }\n   }\n\n   // Open a model with a |cnv| (optional)\n   openModal = (cnv) => {\n      this.setState({showModal: true, editCnv: cnv});\n   }\n\n   modalDismiss = (result) => {\n      if (result.status === \"Ok\") {\n         if (this.state.editCnv)\n            this.modCnv(result);\n         else\n            this.newCnv(result);\n      }\n      this.setState({ showModal: false, editCnv: null });\n   }\n\n   modCnv(result) {\n      this.props.modCnv(this.state.editCnv.id, result.title);\n      this.props.updateCnvs();\n   }\n\n   newCnv(result) {\n      this.props.addCnv({ title: result.title });\n   }\n\n   openConfirmation = (cnv) => {\n      this.setState({ delCnv: cnv, showConfirmation: true })\n   }\n\n   closeConfirmation = (res) => {\n      if(res === \"Yes\"){\n         this.props.delCnv(this.state.delCnv.id);\n         //this.props.updateCnvs();\n         this.setState({showConfirmation: false, delCnv: null });\n      } else {\n         console.log(res)\n         this.setState({ showConfirmation: false, delCnv: null });\n      }\n      \n   }\n\n   openEdit = (cnv) => {\n      this.setState({ delCnv: cnv, showConfirmation: true })\n   }\n\n   \n\n   render() {\n      console.log(\"Rerendering Cnv Overview \", this.props);\n      var boards = [];\n      console.log(this.props.Cnvs)\n      this.props.Boards.forEach(board => {\n         if (!this.props.userOnly || this.props.Prss.id === board.prId)\n            boards.push(\n               <Carousel.Item>\n                  <div className=\"carousel-pic\">\n                     <img \n                        className=\"d-block w-100\"\n                        src={board.picURL}\n                        alt=\"First slide\"\n                     />\n                  </div>\n                  \n                  <Carousel.Caption className=\"carousel-description\">\n                     <h3>{board.bName}</h3>\n                     <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n                  </Carousel.Caption>\n               </Carousel.Item>\n            );\n      });\n\n      return (\n         <section className=\"container\">\n            <h1 className=\"heading\">My Boards</h1>\n\n            <Carousel>\n               {boards}\n            </Carousel>\n\n            \n            <Button variant=\"primary\" onClick=\n               {() => this.openModal()}>Add A New Board</Button>\n            {/* Modal for creating and change cnv */}\n            \n            \n            <ConfDialog\n               show={this.state.showConfirmation}\n               title=\"Delete Conversation\"\n               body={`Are you sure you want to delete the Conversation\n           '${this.state.delCnv ? this.state.delCnv.title : ''}'`}\n               buttons={['Yes', 'Abort']}\n               onClose={this.closeConfirmation} />\n         </section>\n      )\n   }\n}\n\n// A Cnv list item\nconst CnvItem = function (props) {\n   return (\n      <ListGroupItem>\n         <Row> \n            <Col sm={4} className=\"float-left\">\n               <Link to={\"/CnvDetail/\" + props.id}>{props.title}</Link>\n            </Col>\n            {\n               props.lastMessage ? \n                  <Col sm={4} \n                   className=\"float-left\">{new Intl.DateTimeFormat('us',\n                  {\n                     year: \"numeric\", month: \"short\", day: \"numeric\",\n                     hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\"\n                  })\n                  .format(new Date(props.lastMessage))}\n                  </Col> \n                  : \n                  <Col sm={4}> N/A </Col>\n            }\n            \n            \n            {props.showControls ?\n               <Col sm={4} className=\"float-right right-text\">\n                  <Button size=\"sm\" onClick={props.onDelete} \n                   className=\"favicon\">\n                     <span className=\"fa fa-trash\"/>\n                  </Button>\n                  <Button size=\"sm\" onClick={props.onEdit} className=\"favicon\">\n                     <span className=\"fa fa-edit\"/>\n                  </Button>\n               </Col>\n               : ''}\n         </Row>\n      </ListGroupItem>\n   )\n}\n"]},"metadata":{},"sourceType":"module"}