{"ast":null,"code":"var _jsxFileName = \"/Users/SeanQuinn/Desktop/ReactJS3/src/components/Cnvs/CnvDetail.jsx\";\nimport React, { Component } from 'react';\nimport { ListGroup, Col, Row, Button, Form, FormGroup } from 'react-bootstrap';\nimport { MsgItem, ConfDialog, MsgModal } from '../components';\nimport './CnvOverview.css';\nexport default class CnvDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getValidationState = () => {\n      if (this.state.newMessage) {\n        return null;\n      }\n\n      return \"warning\";\n    };\n\n    this.formSubmit = event => {\n      this.props.addMsg({\n        content: this.state.newMessage\n      }, this.state.cnvId, () => {\n        this.props.updateMsgs(this.state.cnvId, () => {\n          this.setState({\n            newMessage: ''\n          });\n        });\n      });\n      console.log(this.state.newMessage);\n    };\n\n    this.formValid = () => {\n      return this.state.newMessage.length;\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        newMessage: e.target.value\n      });\n    };\n\n    this.closeErrorConf = btn => {\n      this.props.clearErrors();\n    };\n\n    this.openModal = cnv => {\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.modalDismiss = result => {\n      if (result.status === \"Ok\") {\n        console.log(result);\n        this.props.addMsg({\n          content: result.message\n        }, this.state.cnvId, () => {\n          this.props.updateMsgs(this.state.cnvId, () => {\n            this.setState({\n              newMessage: ''\n            });\n          });\n        });\n      }\n\n      this.setState({\n        showModal: false\n      });\n    };\n\n    const second = 2;\n    let cnvId = this.props.location.pathname.split('/')[second];\n    this.props.updateMsgs(cnvId);\n    this.state = {\n      newMessage: '',\n      cnvId: cnvId,\n      showModal: false\n    };\n  }\n\n  hideContent(e) {\n    console.log(e);\n    console.log(this);\n  }\n\n  render() {\n    console.log(\"Rerendering Cnv Detail \", this.state.messages);\n    var messages = this.props.Msgs;\n    var msgItems = [];\n\n    if (messages.length) {\n      messages.forEach((msg, idx) => {\n        msgItems.push(React.createElement(MsgItem, {\n          key: msg.content,\n          content: msg.content // <- use content here bc a newly added\n          ,\n          id: msg.id // msg does not get its id returned \n          ,\n          email: msg.email // as per REST Spec\n          ,\n          whenMade: msg.whenMade,\n          hideContent: () => this.hideContent(this),\n          ishidden: 0,\n          onDelete: () => this.openConfirmation(msg),\n          onEdit: () => this.openModal(msg),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }));\n      });\n    }\n\n    return React.createElement(\"section\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Conversation Detail\"), React.createElement(Row, {\n      hidden: this.props.Msgs.length === 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Col, {\n      sm: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Date\")), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, msgItems), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Create New Message\")))), React.createElement(MsgModal, {\n      showModal: this.state.showModal,\n      title: \"Enter New Message\",\n      onDismiss: this.modalDismiss,\n      forMsg: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(ConfDialog, {\n      show: this.props.Errs.length !== 0,\n      title: \"Error Notice\",\n      body: this.props.Errs[0],\n      buttons: ['For Sure'],\n      onClose: this.closeErrorConf,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }));\n  }\n\n} //Create a MsgItem Component to show each message. This component shows on a top line the posting date and email of the poster, \n//and beneath that line the text content of the message, whose appearance is toggled on and off by clicking on the top line.","map":{"version":3,"sources":["/Users/SeanQuinn/Desktop/ReactJS3/src/components/Cnvs/CnvDetail.jsx"],"names":["React","Component","ListGroup","Col","Row","Button","Form","FormGroup","MsgItem","ConfDialog","MsgModal","CnvDetail","constructor","props","getValidationState","state","newMessage","formSubmit","event","addMsg","content","cnvId","updateMsgs","setState","console","log","formValid","length","handleChange","e","target","value","closeErrorConf","btn","clearErrors","openModal","cnv","showModal","modalDismiss","result","status","message","second","location","pathname","split","hideContent","render","messages","Msgs","msgItems","forEach","msg","idx","push","id","email","whenMade","openConfirmation","Errs"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {ListGroup, Col, Row, Button, Form, FormGroup} from 'react-bootstrap';\nimport {MsgItem, ConfDialog, MsgModal} from '../components';\n\nimport './CnvOverview.css';\n\nexport default class CnvDetail extends Component {\n   constructor(props) {\n      super(props);\n      const second = 2;\n      let cnvId = this.props.location.pathname.split('/')[second];\n      this.props.updateMsgs(cnvId)\n      this.state = {\n         newMessage: '',\n         cnvId: cnvId,\n         showModal: false\n      }\n   }\n\n   getValidationState = () => {\n      if (this.state.newMessage) {\n         return null;\n      }\n      return \"warning\";\n   }\n\n   formSubmit = (event) => {\n      this.props.addMsg({ content: this.state.newMessage }, this.state.cnvId,\n         () => {\n            \n            this.props.updateMsgs(this.state.cnvId,\n               () => {this.setState({newMessage: ''})})\n            \n         });\n      console.log(this.state.newMessage);\n   }\n\n   formValid = () => {\n      return this.state.newMessage.length\n   }\n\n   handleChange = (e) => {\n      this.setState({newMessage: e.target.value});\n   }\n\n   hideContent (e) {\n      console.log(e)\n      console.log(this)\n   }\n\n   closeErrorConf = (btn) => {\n      this.props.clearErrors();\n   }\n\n   openModal = (cnv) => {\n      this.setState({showModal: true});\n   }\n\n   modalDismiss = (result) => {\n      if (result.status === \"Ok\") {\n         console.log(result)\n\n         this.props.addMsg({ content: result.message }, this.state.cnvId,\n            () => {\n               \n               this.props.updateMsgs(this.state.cnvId,\n                () => {this.setState({newMessage: ''})})\n               \n            });\n         \n      }\n      this.setState({ showModal: false,  });\n   }\n\n   render() {\n      console.log(\"Rerendering Cnv Detail \", this.state.messages);\n\n      \n      var messages = this.props.Msgs;\n      var msgItems = [];\n \n      if(messages.length){\n         messages.forEach((msg, idx) => {\n            msgItems.push(<MsgItem\n                  key={msg.content}\n                  content={msg.content} // <- use content here bc a newly added\n                  id={msg.id}           // msg does not get its id returned \n                  email={msg.email}     // as per REST Spec\n                  whenMade={msg.whenMade}\n                  hideContent={() => this.hideContent(this)}\n                  ishidden={0}\n                  onDelete={() => this.openConfirmation(msg)}\n                  onEdit={() => this.openModal(msg)} />);\n         });\n      }\n      \n\n      return (\n         <section className=\"container\">\n            <h1>Conversation Detail</h1>\n            <Row hidden={this.props.Msgs.length === 0}>\n               \n               <Col sm={4}>\n                  Email\n               </Col>\n               <Col sm={4}>\n                  Date\n               </Col>\n            </Row>\n            \n          \n            <ListGroup>\n               {msgItems}\n            </ListGroup>\n\n            <Form>\n\n               \n               <FormGroup>\n                  <Col>\n                     <Button onClick={this.openModal}>\n                        Create New Message\n                     </Button>\n                 </Col>\n               </FormGroup>\n\n            </Form>\n\n            <MsgModal\n               showModal={this.state.showModal}\n               title={\"Enter New Message\"}\n               onDismiss={this.modalDismiss} \n               forMsg={true}/>\n\n            <ConfDialog\n               show={this.props.Errs.length !== 0}\n               title=\"Error Notice\"\n               body={this.props.Errs[0]}\n               buttons={['For Sure']}\n               onClose={this.closeErrorConf}\n                />\n            \n         </section>\n      )\n   }\n}\n\n//Create a MsgItem Component to show each message. This component shows on a top line the posting date and email of the poster, \n//and beneath that line the text content of the message, whose appearance is toggled on and off by clicking on the top line.\n"]},"metadata":{},"sourceType":"module"}