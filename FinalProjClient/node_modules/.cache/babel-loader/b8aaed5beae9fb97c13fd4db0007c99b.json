{"ast":null,"code":"var _jsxFileName = \"/Users/SeanQuinn/Desktop/ReactJS3/src/components/Cnvs/CnvDetail.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ListGroup, ListGroupItem, Col, Row, Button } from 'react-bootstrap';\nimport CnvModal from './CnvModal';\nimport { ConfDialog } from '../components'; //import {delCnv} from '../../api';\n\nimport './CnvOverview.css';\nexport default class CnvDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openModal = cnv => {\n      this.setState({\n        showModal: true,\n        editCnv: cnv\n      });\n    };\n\n    this.modalDismiss = result => {\n      if (result.status === \"Ok\") {\n        if (this.state.editCnv) this.modCnv(result);else this.newCnv(result);\n      }\n\n      this.setState({\n        showModal: false,\n        editCnv: null\n      });\n    };\n\n    this.openConfirmation = cnv => {\n      this.setState({\n        delCnv: cnv,\n        showConfirmation: true\n      });\n    };\n\n    this.closeConfirmation = res => {\n      if (res === \"Yes\") {\n        this.props.delCnv(this.state.delCnv.id);\n        this.props.updateCnvs();\n        this.setState({\n          showConfirmation: false,\n          delCnv: null\n        });\n      } else {\n        console.log(res);\n        this.setState({\n          showConfirmation: false,\n          delCnv: null\n        });\n      }\n    };\n\n    this.openEdit = cnv => {\n      this.setState({\n        delCnv: cnv,\n        showConfirmation: true\n      });\n    };\n\n    this.getValidationState = () => {\n      if (this.state.newMessage) {\n        return null;\n      }\n\n      return \"warning\";\n    };\n\n    let cnvId = this.props.location.pathname.split('/')[2];\n    this.props.updateMsgs(cnvId);\n    this.state = {\n      showModal: false,\n      showConfirmation: false,\n      newMessage: null\n    };\n  } // Open a model with a |cnv| (optional)\n\n\n  modCnv(result) {\n    this.props.modCnv(this.state.editCnv.id, result.title);\n    this.props.updateCnvs();\n  }\n\n  newCnv(result) {\n    this.props.addCnv({\n      title: result.title\n    });\n  }\n\n  render() {\n    console.log(\"Rerendering Cnv Detail \", this.state.messages); // var people = []\n    // messages.forEach(msg => people.push(this.props.getPerson(msg.prsId)))\n\n    var msgItems = []; // console.log(messages);\n    // messages.forEach((msg, idx) => {\n    //    msgItems.push(<MsgItem\n    //          key={msg.id}\n    //          content={msg.content}\n    //          id={msg.id}\n    //          email={people[idx].email}\n    //          //showControls={cnv.ownerId === this.props.Prss.id}\n    //          onDelete={() => this.openConfirmation(msg)}\n    //          onEdit={() => this.openModal(msg)} />);\n    // });\n\n    return React.createElement(\"section\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Conversation Detail\"), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, msgItems), React.createElement(\"form\", {\n      onSubmit: e => e.preventDefault() || this.state.newMessage.length ? this.close(\"Ok\") : this.close(\"Cancel\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      controlId: \"formBasicText\",\n      validationstate: this.getValidationState(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Conversation Title\"), React.createElement(FormControl, {\n      type: \"text\",\n      value: this.state.cnvTitle,\n      placeholder: \"Enter text\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(FormControl.Feedback, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), !this.state.cnvTitle && React.createElement(Form.Text, {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Title is required\"))), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.openModal(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"New Message\"));\n  }\n\n} //Create a MsgItem Component to show each message. This component shows on a top line the posting date and email of the poster, \n//and beneath that line the text content of the message, whose appearance is toggled on and off by clicking on the top line.\n\nconst MsgItem = function (props) {\n  return React.createElement(ListGroupItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, new Intl.DateTimeFormat('us', {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\"\n  }).format(new Date(props.whenMade))), React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, \"props.title\"), React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, \"props.email\")));\n}; // A Cnv list item\n\n\nconst CnvItem = function (props) {\n  return React.createElement(ListGroupItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/CnvDetail/\" + props.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, props.title)), props.lastMessage ? React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, new Intl.DateTimeFormat('us', {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    second: \"2-digit\"\n  }).format(new Date(props.lastMessage))) : React.createElement(Col, {\n    sm: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, \" Null \"), props.showControls ? React.createElement(\"div\", {\n    className: \"float-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"sm\",\n    onClick: props.onDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"fa fa-thumbs-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  })), React.createElement(Button, {\n    size: \"sm\",\n    onClick: props.onEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"fa fa-edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }))) : ''));\n};","map":{"version":3,"sources":["/Users/SeanQuinn/Desktop/ReactJS3/src/components/Cnvs/CnvDetail.jsx"],"names":["React","Component","Link","ListGroup","ListGroupItem","Col","Row","Button","CnvModal","ConfDialog","CnvDetail","constructor","props","openModal","cnv","setState","showModal","editCnv","modalDismiss","result","status","state","modCnv","newCnv","openConfirmation","delCnv","showConfirmation","closeConfirmation","res","id","updateCnvs","console","log","openEdit","getValidationState","newMessage","cnvId","location","pathname","split","updateMsgs","title","addCnv","render","messages","msgItems","e","preventDefault","length","close","cnvTitle","handleChange","MsgItem","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","Date","whenMade","CnvItem","lastMessage","showControls","onDelete","onEdit"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,SAAR,EAAmBC,aAAnB,EAAkCC,GAAlC,EAAuCC,GAAvC,EAA4CC,MAA5C,QAAyD,iBAAzD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,UAAR,QAAyB,eAAzB,C,CACA;;AACA,OAAO,mBAAP;AAEA,eAAe,MAAMC,SAAN,SAAwBT,SAAxB,CAAkC;AAC9CU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAChB,UAAMA,KAAN;;AADgB,SAYnBC,SAZmB,GAYNC,GAAD,IAAS;AAClB,WAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAE,IAAZ;AAAkBC,QAAAA,OAAO,EAAEH;AAA3B,OAAd;AACF,KAdkB;;AAAA,SAgBnBI,YAhBmB,GAgBHC,MAAD,IAAY;AACxB,UAAIA,MAAM,CAACC,MAAP,KAAkB,IAAtB,EAA4B;AACzB,YAAI,KAAKC,KAAL,CAAWJ,OAAf,EACG,KAAKK,MAAL,CAAYH,MAAZ,EADH,KAGG,KAAKI,MAAL,CAAYJ,MAAZ;AACL;;AACD,WAAKJ,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE,KAAb;AAAoBC,QAAAA,OAAO,EAAE;AAA7B,OAAd;AACF,KAxBkB;;AAAA,SAmCnBO,gBAnCmB,GAmCCV,GAAD,IAAS;AACzB,WAAKC,QAAL,CAAc;AAAEU,QAAAA,MAAM,EAAEX,GAAV;AAAeY,QAAAA,gBAAgB,EAAE;AAAjC,OAAd;AACF,KArCkB;;AAAA,SAuCnBC,iBAvCmB,GAuCEC,GAAD,IAAS;AAC1B,UAAGA,GAAG,KAAK,KAAX,EAAiB;AACd,aAAKhB,KAAL,CAAWa,MAAX,CAAkB,KAAKJ,KAAL,CAAWI,MAAX,CAAkBI,EAApC;AACA,aAAKjB,KAAL,CAAWkB,UAAX;AACA,aAAKf,QAAL,CAAc;AAACW,UAAAA,gBAAgB,EAAE,KAAnB;AAA0BD,UAAAA,MAAM,EAAE;AAAlC,SAAd;AACF,OAJD,MAIO;AACJM,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACA,aAAKb,QAAL,CAAc;AAAEW,UAAAA,gBAAgB,EAAE,KAApB;AAA2BD,UAAAA,MAAM,EAAE;AAAnC,SAAd;AACF;AAEH,KAjDkB;;AAAA,SAmDnBQ,QAnDmB,GAmDPnB,GAAD,IAAS;AACjB,WAAKC,QAAL,CAAc;AAAEU,QAAAA,MAAM,EAAEX,GAAV;AAAeY,QAAAA,gBAAgB,EAAE;AAAjC,OAAd;AACF,KArDkB;;AAAA,SAuDnBQ,kBAvDmB,GAuDE,MAAM;AACxB,UAAI,KAAKb,KAAL,CAAWc,UAAf,EAA2B;AACxB,eAAO,IAAP;AACF;;AACD,aAAO,SAAP;AACF,KA5DkB;;AAEhB,QAAIC,KAAK,GAAG,KAAKxB,KAAL,CAAWyB,QAAX,CAAoBC,QAApB,CAA6BC,KAA7B,CAAmC,GAAnC,EAAwC,CAAxC,CAAZ;AACA,SAAK3B,KAAL,CAAW4B,UAAX,CAAsBJ,KAAtB;AACA,SAAKf,KAAL,GAAa;AACVL,MAAAA,SAAS,EAAE,KADD;AAEVU,MAAAA,gBAAgB,EAAE,KAFR;AAGVS,MAAAA,UAAU,EAAE;AAHF,KAAb;AAKF,GAV6C,CAY9C;;;AAeAb,EAAAA,MAAM,CAACH,MAAD,EAAS;AACZ,SAAKP,KAAL,CAAWU,MAAX,CAAkB,KAAKD,KAAL,CAAWJ,OAAX,CAAmBY,EAArC,EAAyCV,MAAM,CAACsB,KAAhD;AACA,SAAK7B,KAAL,CAAWkB,UAAX;AACF;;AAEDP,EAAAA,MAAM,CAACJ,MAAD,EAAS;AACZ,SAAKP,KAAL,CAAW8B,MAAX,CAAkB;AAAED,MAAAA,KAAK,EAAEtB,MAAM,CAACsB;AAAhB,KAAlB;AACF;;AA6BDE,EAAAA,MAAM,GAAG;AACNZ,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC,KAAKX,KAAL,CAAWuB,QAAlD,EADM,CAIN;AACA;;AAEA,QAAIC,QAAQ,GAAG,EAAf,CAPM,CAQN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WACG;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADH,EAEG,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACIA,QADJ,CAFH,EAMG;AAAM,MAAA,QAAQ,EAAGC,CAAD,IACbA,CAAC,CAACC,cAAF,MAAsB,KAAK1B,KAAL,CAAWc,UAAX,CAAsBa,MAA5C,GACG,KAAKC,KAAL,CAAW,IAAX,CADH,GACsB,KAAKA,KAAL,CAAW,QAAX,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,eAArB;AACG,MAAA,eAAe,EAAE,KAAKf,kBAAL,EADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHH,EAIG,oBAAC,WAAD;AACG,MAAA,IAAI,EAAC,MADR;AAEG,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAW6B,QAFrB;AAGG,MAAA,WAAW,EAAC,YAHf;AAIG,MAAA,QAAQ,EAAE,KAAKC,YAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJH,EAUG,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVH,EAYM,CAAE,KAAK9B,KAAL,CAAW6B,QAAb,IACA,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAbN,CAHH,CANH,EA8BG,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAC7B,MAAM,KAAKrC,SAAL,EADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA9BH,CADH;AAqCF;;AAxH6C,C,CA2HjD;AACA;;AAEA,MAAMuC,OAAO,GAAG,UAAUxC,KAAV,EAAiB;AAC9B,SACG,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEG,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAa,IAAIyC,IAAI,CAACC,cAAT,CAAwB,IAAxB,EACV;AACGC,IAAAA,IAAI,EAAE,SADT;AACoBC,IAAAA,KAAK,EAAE,OAD3B;AACoCC,IAAAA,GAAG,EAAE,SADzC;AAEGC,IAAAA,IAAI,EAAE,SAFT;AAEoBC,IAAAA,MAAM,EAAE,SAF5B;AAEuCC,IAAAA,MAAM,EAAE;AAF/C,GADU,EAKTC,MALS,CAKF,IAAIC,IAAJ,CAASlD,KAAK,CAACmD,QAAf,CALE,CAAb,CAFH,EASG,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBATH,EAYG,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAZH,CADH,CADH;AAqBF,CAtBD,C,CAwBA;;;AACA,MAAMC,OAAO,GAAG,UAAUpD,KAAV,EAAiB;AAC9B,SACG,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,gBAAgBA,KAAK,CAACiB,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCjB,KAAK,CAAC6B,KAA3C,CADH,CADH,EAKM7B,KAAK,CAACqD,WAAN,GAEA,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAa,IAAIZ,IAAI,CAACC,cAAT,CAAwB,IAAxB,EACb;AACGC,IAAAA,IAAI,EAAE,SADT;AACoBC,IAAAA,KAAK,EAAE,OAD3B;AACoCC,IAAAA,GAAG,EAAE,SADzC;AAEGC,IAAAA,IAAI,EAAE,SAFT;AAEoBC,IAAAA,MAAM,EAAE,SAF5B;AAEuCC,IAAAA,MAAM,EAAE;AAF/C,GADa,EAKZC,MALY,CAKL,IAAIC,IAAJ,CAASlD,KAAK,CAACqD,WAAf,CALK,CAAb,CAFA,GAUA,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfN,EAkBIrD,KAAK,CAACsD,YAAN,GACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAkB,IAAA,OAAO,EAAEtD,KAAK,CAACuD,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADH,EAIG,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AAAkB,IAAA,OAAO,EAAEvD,KAAK,CAACwD,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CAJH,CADF,GASI,EA3BR,CADH,CADH;AAiCF,CAlCD","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\nimport {ListGroup, ListGroupItem, Col, Row, Button} from 'react-bootstrap';\nimport CnvModal from './CnvModal';\nimport {ConfDialog} from '../components';\n//import {delCnv} from '../../api';\nimport './CnvOverview.css';\n\nexport default class CnvDetail extends Component {\n   constructor(props) {\n      super(props);\n      let cnvId = this.props.location.pathname.split('/')[2];\n      this.props.updateMsgs(cnvId)\n      this.state = {\n         showModal: false,\n         showConfirmation: false,\n         newMessage: null\n      }\n   }\n\n   // Open a model with a |cnv| (optional)\n   openModal = (cnv) => {\n      this.setState({showModal: true, editCnv: cnv});\n   }\n\n   modalDismiss = (result) => {\n      if (result.status === \"Ok\") {\n         if (this.state.editCnv)\n            this.modCnv(result);\n         else\n            this.newCnv(result);\n      }\n      this.setState({ showModal: false, editCnv: null });\n   }\n\n   modCnv(result) {\n      this.props.modCnv(this.state.editCnv.id, result.title);\n      this.props.updateCnvs();\n   }\n\n   newCnv(result) {\n      this.props.addCnv({ title: result.title });\n   }\n\n   openConfirmation = (cnv) => {\n      this.setState({ delCnv: cnv, showConfirmation: true })\n   }\n\n   closeConfirmation = (res) => {\n      if(res === \"Yes\"){\n         this.props.delCnv(this.state.delCnv.id);\n         this.props.updateCnvs();\n         this.setState({showConfirmation: false, delCnv: null });\n      } else {\n         console.log(res)\n         this.setState({ showConfirmation: false, delCnv: null });\n      }\n      \n   }\n\n   openEdit = (cnv) => {\n      this.setState({ delCnv: cnv, showConfirmation: true })\n   }\n\n   getValidationState = () => {\n      if (this.state.newMessage) {\n         return null;\n      }\n      return \"warning\";\n   }\n\n   render() {\n      console.log(\"Rerendering Cnv Detail \", this.state.messages);\n\n      \n      // var people = []\n      // messages.forEach(msg => people.push(this.props.getPerson(msg.prsId)))\n\n      var msgItems = [];\n      // console.log(messages);\n      // messages.forEach((msg, idx) => {\n      //    msgItems.push(<MsgItem\n      //          key={msg.id}\n      //          content={msg.content}\n      //          id={msg.id}\n      //          email={people[idx].email}\n      //          //showControls={cnv.ownerId === this.props.Prss.id}\n      //          onDelete={() => this.openConfirmation(msg)}\n      //          onEdit={() => this.openModal(msg)} />);\n      // });\n\n      return (\n         <section className=\"container\">\n            <h1>Conversation Detail</h1>\n            <ListGroup>\n               {msgItems}\n            </ListGroup>\n\n            <form onSubmit={(e) =>\n               e.preventDefault() || this.state.newMessage.length ?\n                  this.close(\"Ok\") : this.close(\"Cancel\")}>\n               <FormGroup controlId=\"formBasicText\"\n                  validationstate={this.getValidationState()}\n               >\n                  <Form.Label>Conversation Title</Form.Label>\n                  <FormControl\n                     type=\"text\"\n                     value={this.state.cnvTitle}\n                     placeholder=\"Enter text\"\n                     onChange={this.handleChange}\n                  />\n                  <FormControl.Feedback />\n                  {\n                     !(this.state.cnvTitle) && \n                     <Form.Text className=\"text-muted\">\n                        Title is required\n                     </Form.Text>\n                  }\n                  \n               </FormGroup>\n            </form>\n\n            <Button variant=\"primary\" onClick=\n               {() => this.openModal()}>New Message</Button>\n            {/* Modal for creating and change cnv */}\n            \n         </section>\n      )\n   }\n}\n\n//Create a MsgItem Component to show each message. This component shows on a top line the posting date and email of the poster, \n//and beneath that line the text content of the message, whose appearance is toggled on and off by clicking on the top line.\n\nconst MsgItem = function (props) {\n   return (\n      <ListGroupItem>\n         <Row>\n            \n            <Col sm={4}>{new Intl.DateTimeFormat('us',\n               {\n                  year: \"numeric\", month: \"short\", day: \"numeric\",\n                  hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\"\n               })\n               .format(new Date(props.whenMade))}\n            </Col>\n            <Col sm={4}>\n               props.title\n            </Col>\n            <Col sm={4}>\n               props.email\n            </Col>\n            \n         </Row>\n      </ListGroupItem>\n   )\n}\n\n// A Cnv list item\nconst CnvItem = function (props) {\n   return (\n      <ListGroupItem>\n         <Row> \n            <Col sm={4}>\n               <Link to={\"/CnvDetail/\" + props.id}>{props.title}</Link>\n            </Col>\n            {\n               props.lastMessage ? \n\n               <Col sm={4}>{new Intl.DateTimeFormat('us',\n               {\n                  year: \"numeric\", month: \"short\", day: \"numeric\",\n                  hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\"\n               })\n               .format(new Date(props.lastMessage))}\n               </Col> \n               : \n               <Col sm={4}> Null </Col>\n            }\n            \n            {props.showControls ?\n               <div className=\"float-right\">\n                  <Button size=\"sm\" onClick={props.onDelete}>\n                     <span className=\"fa fa-thumbs-up\"/>\n                  </Button>\n                  <Button size=\"sm\" onClick={props.onEdit}>\n                     <span className=\"fa fa-edit\"/>\n                  </Button>\n               </div>\n               : ''}\n         </Row>\n      </ListGroupItem>\n   )\n}\n"]},"metadata":{},"sourceType":"module"}