{"ast":null,"code":"import _objectWithoutProperties from \"/Users/SeanQuinn/Desktop/ReactJS3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/SeanQuinn/Desktop/ReactJS3/src/components/Register/Register.jsx\";\nimport React, { Component } from 'react';\nimport { ConfDialog } from '../components';\nimport { Form, FormGroup, FormControl, Button, Alert } from 'react-bootstrap';\nimport './Register.css'; // Functional component label plus control w/optional help message\n\nfunction FieldGroup(_ref) {\n  let id = _ref.id,\n      label = _ref.label,\n      help = _ref.help,\n      props = _objectWithoutProperties(_ref, [\"id\", \"label\", \"help\"]);\n\n  return React.createElement(FormGroup, {\n    controlId: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, label), React.createElement(Form.Control, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })), help && React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, help));\n}\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      passwordTwo: '',\n      termsAccepted: false,\n      role: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  submit() {\n    let _this$state = this.state,\n        firstName = _this$state.firstName,\n        lastName = _this$state.lastName,\n        email = _this$state.email,\n        password = _this$state.password,\n        termsAccepted = _this$state.termsAccepted,\n        role = _this$state.role;\n    const user = {\n      firstName,\n      lastName,\n      email,\n      password,\n      termsAccepted,\n      role\n    };\n    this.props.register(user, () => {\n      this.setState({\n        offerSignIn: true\n      });\n    });\n  }\n\n  handleChange(ev) {\n    let newState = {};\n\n    switch (ev.target.type) {\n      case 'checkbox':\n        if (ev.target.id === \"role\") {\n          if (ev.target.checked) newState[ev.target.id] = 1;else newState[ev.target.id] = 0;\n        } else {\n          newState[ev.target.id] = ev.target.checked;\n        }\n\n        console.log(newState);\n        break;\n\n      default:\n        newState[ev.target.id] = ev.target.value;\n    }\n\n    this.setState(newState);\n  }\n\n  formValid() {\n    let s = this.state;\n    return s.email && s.lastName && s.password && s.password === s.passwordTwo && s.termsAccepted;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(FieldGroup, {\n      id: \"email\",\n      type: \"email\",\n      label: \"Email Address\",\n      placeholder: \"Enter email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(FieldGroup, {\n      id: \"firstName\",\n      type: \"text\",\n      label: \"First Name\",\n      placeholder: \"Enter first name\",\n      value: this.state.firstName,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(FieldGroup, {\n      id: \"lastName\",\n      type: \"text\",\n      label: \"Last Name\",\n      placeholder: \"Enter last name\",\n      value: this.state.lastName,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(FieldGroup, {\n      id: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(FieldGroup, {\n      id: \"passwordTwo\",\n      type: \"password\",\n      label: \"Repeat Password\",\n      value: this.state.passwordTwo,\n      onChange: this.handleChange,\n      required: true,\n      help: \"Repeat your password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Form.Check, {\n      id: \"termsAccepted\",\n      value: this.state.termsAccepted,\n      onChange: this.handleChange,\n      label: \"Do you accept the terms and conditions?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), console.log(\"stuff\", this.props), this.props.Prss.role === 1 ? React.createElement(Form.Check, {\n      id: \"role\",\n      value: this.state.role,\n      onChange: this.handleChange,\n      label: \"Make Admin?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }) : ''), this.state.password !== this.state.passwordTwo ? React.createElement(Alert, {\n      variant: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Passwords don't match\") : '', React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => this.submit(),\n      disabled: !this.formValid(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(ConfDialog, {\n      show: this.state.offerSignIn,\n      title: \"Registration Success\",\n      body: \"Would you like to log in as \".concat(this.state.email, \"?\"),\n      buttons: ['YES', 'NO'],\n      onClose: answer => {\n        this.setState({\n          offerSignIn: false\n        });\n\n        if (answer === 'YES') {\n          this.props.signIn({\n            email: this.state.email,\n            password: this.state.password\n          }, () => this.props.history.push(\"/\"));\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/SeanQuinn/Desktop/ReactJS3/src/components/Register/Register.jsx"],"names":["React","Component","ConfDialog","Form","FormGroup","FormControl","Button","Alert","FieldGroup","id","label","help","props","Register","constructor","state","firstName","lastName","email","password","passwordTwo","termsAccepted","role","handleChange","bind","submit","user","register","setState","offerSignIn","ev","newState","target","type","checked","console","log","value","formValid","s","render","Prss","answer","signIn","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {ConfDialog} from '../components';\nimport {Form, FormGroup, FormControl, Button, Alert} from 'react-bootstrap';\n\nimport './Register.css';\n\n// Functional component label plus control w/optional help message\nfunction FieldGroup({id, label, help, ...props }) {\n   return (\n       <FormGroup controlId={id}>\n          <Form.Label>{label}</Form.Label>\n          <Form.Control {...props} />\n          {help && <Form.Text className=\"text-muted\">{help}</Form.Text>}\n       </FormGroup>\n   );\n}\n\nclass Register extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         firstName: '',\n         lastName: '',\n         email: '',\n         password: '',\n         passwordTwo: '',\n         termsAccepted: false,\n         role: 0\n      }\n      this.handleChange = this.handleChange.bind(this);\n   }\n\n   submit() {\n      let { // Make a copy of the relevant values in current state\n         firstName,\n         lastName,\n         email,\n         password,\n         termsAccepted,\n         role\n      } = this.state;\n\n      const user = {\n         firstName,\n         lastName,\n         email,\n         password,\n         termsAccepted,\n         role\n      };\n\n      this.props.register(user, () => {this.setState({offerSignIn: true})});\n   }\n\n   handleChange(ev) {\n      let newState = {};\n\n      switch (ev.target.type) {\n      case 'checkbox':\n         if (ev.target.id === \"role\"){\n            if (ev.target.checked)\n               newState[ev.target.id] = 1;\n            else\n               newState[ev.target.id] = 0;\n         } else {\n            newState[ev.target.id] = ev.target.checked;\n         }\n         \n         console.log(newState)\n         break;\n      default:\n         newState[ev.target.id] = ev.target.value;\n      }\n      this.setState(newState);\n   }\n\n   formValid() {\n      let s = this.state;\n\n      return s.email && s.lastName && s.password && s.password === s.passwordTwo\n       && s.termsAccepted;\n   }\n\n   render() {\n     return (\n        <div className=\"container\">\n           <form>\n              <FieldGroup id=\"email\" type=\"email\" label=\"Email Address\"\n               placeholder=\"Enter email\" value={this.state.email}\n               onChange={this.handleChange} required={true}\n               />\n\n              <FieldGroup id=\"firstName\" type=\"text\" label=\"First Name\"\n               placeholder=\"Enter first name\" value={this.state.firstName}\n               onChange={this.handleChange}\n               />\n\n              <FieldGroup id=\"lastName\" type=\"text\" label=\"Last Name\"\n               placeholder=\"Enter last name\" value={this.state.lastName}\n               onChange={this.handleChange} required={true}\n               />\n\n              <FieldGroup id=\"password\" type=\"password\" label=\"Password\"\n               value={this.state.password}\n               onChange={this.handleChange} required={true}\n               />\n\n              <FieldGroup id=\"passwordTwo\" type=\"password\" label=\"Repeat Password\"\n               value={this.state.passwordTwo}\n               onChange={this.handleChange} required={true}\n               help=\"Repeat your password\"\n              />\n\n              <Form.Check  id=\"termsAccepted\"\n               value={this.state.termsAccepted} onChange={this.handleChange}\n               label=\"Do you accept the terms and conditions?\"/>\n              \n              {console.log(\"stuff\", this.props)}\n              {\n                 \n                 this.props.Prss.role === 1 ?\n                  <Form.Check  id=\"role\"\n                   value={this.state.role} onChange={this.handleChange}\n                   label=\"Make Admin?\"/> : ''\n                 \n              }\n              \n               \n           </form>\n\n           {this.state.password !== this.state.passwordTwo ?\n            <Alert variant=\"warning\">\n               Passwords don't match\n            </Alert> : ''}\n\n           <Button variant=\"primary\" onClick={() => this.submit()}\n            disabled={!this.formValid()}>\n              Submit\n           </Button>\n\n           <ConfDialog\n              show={this.state.offerSignIn}\n              title=\"Registration Success\"\n              body={`Would you like to log in as ${this.state.email}?`}\n              buttons={['YES', 'NO']}\n              onClose={answer => {\n                 this.setState({offerSignIn: false});\n                 if (answer === 'YES') {\n                    this.props.signIn(\n                     {email: this.state.email, password: this.state.password},\n                     () => this.props.history.push(\"/\"));\n                 }\n              }}\n           />\n        </div>\n      )\n   }\n}\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}