{"ast":null,"code":"import _objectWithoutProperties from \"/Users/SeanQuinn/Desktop/CSC437FinalProj/FinalProjClient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/SeanQuinn/Desktop/CSC437FinalProj/FinalProjClient/src/components/Ents/EntModal.jsx\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Form, FormGroup, Alert, FormControl, FormControlLabel } from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction FieldGroup(_ref) {\n  let id = _ref.id,\n      label = _ref.label,\n      help = _ref.help,\n      props = _objectWithoutProperties(_ref, [\"id\", \"label\", \"help\"]);\n\n  return React.createElement(FormGroup, {\n    controlId: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, label), React.createElement(Form.Control, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })), help && React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, help));\n}\n\nexport default class EntModal extends Component {\n  //title varchar(80) not null,\n  // waveHeight int not null,\n  // content varchar(1000) not null,\n  // rating int not null,\n  // loc varchar(80) not null,\n  // public int not null,\n  // whenSurfed datetime(3) not null,\n  constructor(props) {\n    super(props);\n\n    this.close = result => {\n      let _this$state = this.state,\n          ownerId = _this$state.ownerId,\n          title = _this$state.title,\n          waveHeight = _this$state.waveHeight,\n          content = _this$state.content,\n          rating = _this$state.rating,\n          loc = _this$state.loc,\n          pub = _this$state.pub,\n          whenSurfed = _this$state.whenSurfed,\n          picURL = _this$state.picURL,\n          userName = _this$state.userName;\n      const newEnt = {\n        ownerId,\n        title,\n        waveHeight,\n        content,\n        rating,\n        loc,\n        pub,\n        whenSurfed,\n        picURL,\n        userName\n      };\n      console.log(\"props: \", this.props);\n      newEnt.picURL = newEnt.picURL === undefined ? null : newEnt.picURL;\n      console.log('newEnt: ', newEnt);\n      this.props.onDismiss && this.props.onDismiss({\n        status: result,\n        newEnt: newEnt\n      });\n    };\n\n    this.state = {\n      ownerId: 0,\n      title: '',\n      waveHeight: 0,\n      content: '',\n      rating: 0,\n      loc: '',\n      pub: 0,\n      whenSurfed: 0,\n      userName: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(ev) {\n    let newState = {}; //Covers the datepicker case\n\n    if (ev.type === undefined) newState['whenSurfed'] = ev;else {\n      switch (ev.target.type) {\n        case 'checkbox':\n          if (ev.target.id === \"makePublic\") {\n            if (ev.target.checked) newState[ev.target.id] = 1;else newState[ev.target.id] = 0;\n          } else {\n            newState[ev.target.id] = ev.target.checked;\n          }\n\n          break;\n\n        default:\n          if (ev.target.id === 'waveHeight' || ev.target.id === 'rating') newState[ev.target.id] = parseInt(ev.target.value);else newState[ev.target.id] = ev.target.value;\n      }\n    }\n    console.log(newState);\n    this.setState(newState);\n  }\n\n  formValid() {\n    let s = this.state;\n    return s.title && s.waveHeight && s.content && s.rating && s.loc && s.whenSurfed && s.rating >= 0 && s.rating <= 5;\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      show: this.props.showModal,\n      onHide: () => this.close(\"Cancel\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Create a New Journal Entry\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => e.preventDefault() || this.state.cnvTitle.length ? this.close(\"Ok\") : this.close(\"Cancel\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(FieldGroup, {\n      id: \"title\",\n      type: \"text\",\n      label: \"Title\",\n      placeholder: \"Enter title\",\n      value: this.state.title,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Notes on the Session\"), React.createElement(FormControl, {\n      id: \"content\",\n      as: \"textarea\",\n      value: this.state.content,\n      placeholder: \"Enter description\",\n      onChange: this.handleChange,\n      rows: \"4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(FieldGroup, {\n      id: \"loc\",\n      type: \"text\",\n      label: \"Location\",\n      placeholder: \"Enter location\",\n      value: this.state.loc,\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(FieldGroup, {\n      id: \"rating\",\n      type: \"number\",\n      label: \"Rating (0-5)\",\n      value: this.state.rating,\n      placeholder: \"Enter Rating\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), this.state.rating > 5 || this.state.rating < 0 ? React.createElement(Alert, {\n      variant: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Rating must be 0-5\") : '', React.createElement(FieldGroup, {\n      id: \"waveHeight\",\n      type: \"number\",\n      label: \"Wave Height (feet)\",\n      value: this.state.waveHeight,\n      placeholder: \"Enter Wave Height\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(FieldGroup, {\n      id: \"picURL\",\n      type: \"text\",\n      label: \"Picture URL (if you have one)\",\n      value: this.state.picURL,\n      placeholder: \"Enter Wave Height\",\n      onChange: this.handleChange,\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }), React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Date of Surf\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(DatePicker, {\n      selected: this.state.whenSurfed,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(Form.Check, {\n      id: \"pub\",\n      value: this.state.pub,\n      onChange: this.handleChange,\n      label: \"Do you want to make this entry public?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }))), React.createElement(Modal.Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"primary\",\n      disabled: !this.formValid(),\n      onClick: () => this.close(\"Ok\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Ok\"), React.createElement(Button, {\n      onClick: () => this.close(\"Cancel\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/SeanQuinn/Desktop/CSC437FinalProj/FinalProjClient/src/components/Ents/EntModal.jsx"],"names":["React","Component","Modal","Button","Form","FormGroup","Alert","FormControl","FormControlLabel","DatePicker","FieldGroup","id","label","help","props","EntModal","constructor","close","result","state","ownerId","title","waveHeight","content","rating","loc","pub","whenSurfed","picURL","userName","newEnt","console","log","undefined","onDismiss","status","handleChange","bind","ev","newState","type","target","checked","parseInt","value","setState","formValid","s","render","showModal","e","preventDefault","cnvTitle","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Modal, Button, Form, FormGroup, Alert, FormControl, FormControlLabel} from 'react-bootstrap';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nfunction FieldGroup({id, label, help, ...props }) {\n   return (\n       <FormGroup controlId={id}>\n          <Form.Label>{label}</Form.Label>\n          <Form.Control {...props} />\n          {help && <Form.Text className=\"text-muted\">{help}</Form.Text>}\n       </FormGroup>\n   );\n}\n\nexport default class EntModal extends Component {\n   //title varchar(80) not null,\n// waveHeight int not null,\n// content varchar(1000) not null,\n// rating int not null,\n// loc varchar(80) not null,\n// public int not null,\n// whenSurfed datetime(3) not null,\n\n   constructor(props) {\n      super(props);\n      this.state = {\n         ownerId: 0,\n         title: '',\n         waveHeight: 0,\n         content: '',\n         rating: 0,\n         loc: '',\n         pub: 0,\n         whenSurfed: 0,\n         userName: ''\n      }\n      this.handleChange = this.handleChange.bind(this);\n   }\n\n   handleChange(ev) {\n      let newState = {};\n      //Covers the datepicker case\n      if(ev.type === undefined)\n         newState['whenSurfed'] = ev;\n      else {\n         switch (ev.target.type) {\n         case 'checkbox':\n            if (ev.target.id === \"makePublic\"){\n               if (ev.target.checked)\n                  newState[ev.target.id] = 1;\n               else\n                  newState[ev.target.id] = 0;\n            } else {\n               newState[ev.target.id] = ev.target.checked;\n            }\n            \n            break;\n         default:\n            if(ev.target.id === 'waveHeight' || ev.target.id === 'rating')\n               newState[ev.target.id] = parseInt(ev.target.value);\n            else \n               newState[ev.target.id] = ev.target.value;\n         }\n      }\n      console.log(newState)\n      this.setState(newState);\n   }\n\n   formValid() {\n      let s = this.state;\n\n      return s.title && s.waveHeight && s.content && s.rating && s.loc\n       && s.whenSurfed && (s.rating >= 0 && s.rating <= 5) ;\n   }\n\n   close = (result) => {\n      let { // Make a copy of the relevant values in current state\n         ownerId,\n         title,\n         waveHeight,\n         content,\n         rating,\n         loc,\n         pub,\n         whenSurfed,\n         picURL,\n         userName\n      } = this.state;\n\n      const newEnt = {\n         ownerId,\n         title,\n         waveHeight,\n         content,\n         rating,\n         loc,\n         pub,\n         whenSurfed,\n         picURL,\n         userName\n      };\n      console.log(\"props: \", this.props);\n      newEnt.picURL = newEnt.picURL === undefined ? null : newEnt.picURL;\n      console.log('newEnt: ', newEnt);\n      this.props.onDismiss && this.props.onDismiss({\n         status: result,\n         newEnt: newEnt\n      });\n      \n         \n\n      \n   }\n\n   render() {\n      return (\n         <Modal show={this.props.showModal} onHide={() => this.close(\"Cancel\")}>\n            <Modal.Header closeButton>\n               <Modal.Title>Create a New Journal Entry</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n               <form onSubmit={(e) =>\n                  e.preventDefault() || this.state.cnvTitle.length ?\n                     this.close(\"Ok\") : this.close(\"Cancel\")}>\n\n                     <FieldGroup id=\"title\" type=\"text\" label=\"Title\"\n                      placeholder=\"Enter title\" value={this.state.title}\n                      onChange={this.handleChange} required={true}\n                      />\n\n                     <Form.Label>Notes on the Session</Form.Label>\n                     <FormControl id=\"content\"\n                        as=\"textarea\"\n                        value={this.state.content}\n                        placeholder=\"Enter description\"\n                        onChange={this.handleChange}\n                        rows=\"4\"\n                     />\n\n                     <FieldGroup id=\"loc\" type=\"text\" label=\"Location\"\n                      placeholder=\"Enter location\" value={this.state.loc}\n                      onChange={this.handleChange} required={true}\n                      />\n\n                     <FieldGroup id=\"rating\" type=\"number\" label=\"Rating (0-5)\"\n                      value={this.state.rating} placeholder=\"Enter Rating\"\n                      onChange={this.handleChange} required={true}\n                      />\n\n                     {this.state.rating > 5 || this.state.rating < 0 ?\n                        <Alert variant=\"warning\">\n                           Rating must be 0-5\n                        </Alert> : ''\n                     }\n\n                     <FieldGroup id=\"waveHeight\" type=\"number\" \n                      label=\"Wave Height (feet)\" value={this.state.waveHeight} \n                      placeholder=\"Enter Wave Height\"\n                      onChange={this.handleChange} required={true}\n                      />\n   \n                     <FieldGroup id=\"picURL\" type=\"text\" \n                      label=\"Picture URL (if you have one)\"\n                      value={this.state.picURL} \n                      placeholder=\"Enter Wave Height\"\n                      onChange={this.handleChange} required={true}\n                      />\n\n                     <Form.Label>Date of Surf</Form.Label>\n                     <br></br>\n                     <DatePicker\n                      selected={this.state.whenSurfed}\n                      onChange={this.handleChange}\n                      />\n\n                      <br></br>\n\n                     <Form.Check  id=\"pub\"\n                      value={this.state.pub} onChange={this.handleChange}\n                      label=\"Do you want to make this entry public?\"/>\n\n                  {/* <FormGroup controlId=\"formBasicText\">\n                     <Form.Label>{this.props.forMsg? '' : \n                     \"Conversation Title\"}</Form.Label>\n                     <FormControl\n                        type=\"text\"\n                        value={this.state.cnvTitle}\n                        placeholder=\"Enter text\"\n                        onChange={this.handleChange}\n                     />\n                     <FormControl.Feedback />\n                     {\n                        !(this.state.cnvTitle) && \n                        <Form.Text className=\"text-muted\">\n                           Title is required\n                        </Form.Text>\n                     }\n                     \n                  </FormGroup> */}\n               </form>\n            </Modal.Body>\n            <Modal.Footer>\n               <Button variant=\"primary\" disabled={!this.formValid()} \n                onClick={() => this.close(\"Ok\")}>Ok</Button>\n               <Button onClick={() => this.close(\"Cancel\")}>Cancel</Button>\n            </Modal.Footer>\n         </Modal>)\n   }\n}"]},"metadata":{},"sourceType":"module"}